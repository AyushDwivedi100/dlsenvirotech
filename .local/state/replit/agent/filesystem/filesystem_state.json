{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# DLS Envirotech Corporation - Water Treatment Solutions\n\n## Overview\n\nThis is a full-stack web application for DLS Envirotech Corporation, a water treatment solutions company. The application serves as a comprehensive business website showcasing their services, portfolio, and providing client interaction capabilities through consultation requests and an AI chatbot.\n\n## Recent Changes (January 2025)\n\n✓ Replaced placeholder factory icons with actual DLS company logo throughout the site\n✓ Updated navigation menu structure: About Us, Services, Projects, Gallery, Contact Us, Get Quote\n✓ Removed Home link from navigation (logo serves as home link)\n✓ Added visual active state indicators for current page in navigation\n✓ Replaced all placeholder images with high-quality professional water treatment facility photos\n✓ Created comprehensive Gallery page with project installation images\n✓ Enhanced navigation with underline indicators and background highlights for active states\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\nThe application follows a modern full-stack architecture with clear separation between client and server concerns:\n\n- **Frontend**: React SPA with TypeScript, built using Vite\n- **Backend**: Express.js REST API with TypeScript\n- **Database**: PostgreSQL with Drizzle ORM\n- **Styling**: Tailwind CSS with shadcn/ui components\n- **Deployment**: Built for production with static file serving\n\n## Key Components\n\n### Frontend Architecture\n- **Framework**: React 18 with TypeScript\n- **Build Tool**: Vite for fast development and optimized builds\n- **Routing**: Wouter for lightweight client-side routing\n- **State Management**: TanStack Query for server state management\n- **UI Components**: shadcn/ui component library with Radix UI primitives\n- **Styling**: Tailwind CSS with custom industrial color scheme\n\n### Backend Architecture\n- **Runtime**: Node.js with Express.js framework\n- **Language**: TypeScript with ES modules\n- **API**: RESTful endpoints for consultations and chat functionality\n- **Storage**: In-memory storage implementation with interface for future database integration\n- **Development**: Hot reload with Vite middleware integration\n\n### Database Schema\n- **Users**: Authentication system (id, username, password)\n- **Consultations**: Client consultation requests with contact info and service details\n- **Chat Messages**: AI chatbot conversation history with session tracking\n\n### UI/UX Design\n- **Theme**: Industrial/professional with blue and green accent colors\n- **Components**: Comprehensive shadcn/ui component set including forms, cards, dialogs\n- **Responsive**: Mobile-first design with Tailwind breakpoints\n- **Accessibility**: ARIA labels and semantic HTML structure\n\n## Data Flow\n\n### Client Interaction Flow\n1. User visits website and browses services/portfolio\n2. User can request consultation via contact form\n3. Form data sent to `/api/consultations` endpoint\n4. Consultation stored and user receives confirmation\n5. Optional: User interacts with chatbot for immediate assistance\n\n### Chat System Flow\n1. User opens chatbot widget\n2. Messages sent to `/api/chat` endpoint with session ID\n3. Simple response generation (placeholder for AI integration)\n4. Chat history maintained per session\n\n### Content Management\n- Static content defined in constants files\n- Services, portfolio projects, and testimonials configured as data objects\n- Dynamic rendering of cards and sections based on data\n\n## External Dependencies\n\n### Frontend Dependencies\n- **React Ecosystem**: React, React DOM, React Query for state management\n- **UI Components**: Radix UI primitives, Lucide React icons\n- **Forms**: React Hook Form with Zod validation\n- **Routing**: Wouter for client-side navigation\n- **Styling**: Tailwind CSS, class-variance-authority for component variants\n\n### Backend Dependencies\n- **Express.js**: Web framework with middleware support\n- **Database**: Drizzle ORM with PostgreSQL adapter (Neon serverless)\n- **Validation**: Zod schemas for type-safe data validation\n- **Development**: tsx for TypeScript execution, esbuild for production builds\n\n### Build Tools\n- **Vite**: Frontend build tool with React plugin\n- **TypeScript**: Type checking and compilation\n- **PostCSS**: CSS processing with Tailwind\n- **ESBuild**: Fast JavaScript bundling for production\n\n## Deployment Strategy\n\n### Development Environment\n- Vite dev server for frontend with HMR\n- Express server with TypeScript execution via tsx\n- In-memory storage for rapid development iteration\n- Replit-specific tooling and error overlay\n\n### Production Build\n1. **Frontend**: Vite builds optimized static assets to `dist/public`\n2. **Backend**: ESBuild bundles server code to `dist/index.js`\n3. **Database**: Drizzle migrations applied via `db:push` command\n4. **Serving**: Express serves both API routes and static frontend files\n\n### Environment Configuration\n- Database URL configured via environment variables\n- Separate development and production configurations\n- Static asset serving handled by Express in production\n- Error handling with structured JSON responses\n\n### Scalability Considerations\n- Interface-based storage allows easy migration from in-memory to database\n- Modular component architecture supports feature expansion\n- RESTful API design enables mobile app integration\n- Session-based chat system ready for multi-user scaling","size_bytes":5441},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar-background)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":2627},"vite.config.js":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react({\n      jsxRuntime: \"automatic\",\n    }),\n    runtimeErrorOverlay(),\n    // REMOVED cartographer plugin - it was causing transform errors\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(\"client/src\"),\n      \"@assets\": path.resolve(\"attached_assets\"),\n    },\n  },\n  server: {\n    host: '0.0.0.0',\n    port: Number(process.env.PORT) || 5000,\n    allowedHosts: true,  // FIXED: true instead of ['all'] for host blocking\n    hmr: { \n      clientPort: 443  // FIXED: Required for Replit preview\n    }\n  },\n  build: {\n    target: \"esnext\",\n    minify: \"esbuild\",\n    sourcemap: false,\n  },\n  root: \"client\"\n});","size_bytes":843},"vite.config.ts":{"content":"\nimport { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react({\n      // Enable React fast refresh and automatic JSX runtime\n      jsxRuntime: \"automatic\",\n    }),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client/src\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  server: {\n    host: '0.0.0.0',\n    port: 5000,\n    allowedHosts: ['all']\n  },\n  build: {\n    target: \"esnext\",\n    minify: \"esbuild\",\n    sourcemap: false,\n    chunkSizeWarningLimit: 500,\n    rollupOptions: {\n      output: {\n        manualChunks(id) {\n          if (id.includes(\"node_modules\")) {\n            if (id.includes(\"react\")) {\n              return \"vendor_react\";\n            }\n            if (id.includes(\"gsap\")) {\n              return \"vendor_gsap\";\n            }\n            return \"vendor\";\n          }\n        },\n      },\n    },\n  },\n  root: \"client\"\n});\n","size_bytes":1344},"vite.emergency.js":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react({\n      jsxRuntime: \"automatic\",\n    }),\n    runtimeErrorOverlay(),\n    // REMOVED cartographer plugin - it was causing transform errors\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(\"client/src\"),\n      \"@assets\": path.resolve(\"attached_assets\"),\n    },\n  },\n  server: {\n    host: '0.0.0.0',\n    port: Number(process.env.PORT) || 5000,\n    allowedHosts: true,  // FIXED: true instead of ['all'] for host blocking\n    hmr: { \n      clientPort: 443  // FIXED: Required for Replit preview\n    }\n  },\n  build: {\n    target: \"esnext\",\n    minify: \"esbuild\",\n    sourcemap: false,\n  },\n  root: \"client\"\n});","size_bytes":843},"client/vite.clean.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\n\n// Minimal, working config with no problematic plugins\nexport default defineConfig({\n  plugins: [\n    react({\n      jsxRuntime: \"automatic\",\n    })\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(\"./src\"),\n      \"@assets\": path.resolve(\"../attached_assets\"),\n    },\n  },\n  server: {\n    host: '0.0.0.0',\n    port: Number(process.env.PORT) || 5000,\n    allowedHosts: true,  // This fixes the host blocking issue\n    hmr: { \n      clientPort: 443  // Required for Replit preview\n    }\n  },\n  build: {\n    target: \"esnext\",\n    minify: \"esbuild\",\n  },\n  root: \".\"\n});","size_bytes":676},"client/vite.config.dev.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react({\n      jsxRuntime: \"automatic\",\n    }),\n    runtimeErrorOverlay(),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(\"./src\"),\n      \"@assets\": path.resolve(\"../attached_assets\"),\n    },\n  },\n  server: {\n    host: '0.0.0.0',\n    port: 5000,\n    allowedHosts: [\n      'localhost',\n      '0.0.0.0', \n      'e5f29d95-aced-47dc-9e59-aacf5670329f-00-2z95y2kmouw25.worf.replit.dev',\n      /\\.replit\\.dev$/,\n      /\\.worf\\.replit\\.dev$/\n    ]\n  },\n  build: {\n    target: \"esnext\",\n    minify: \"esbuild\",\n    sourcemap: false,\n  }\n});","size_bytes":765},"server/index.ts":{"content":"#!/usr/bin/env node\n// Vite development server launcher for Replit environment\n// This ensures proper startup and port binding for React development\n\nconsole.log(`🚀 Starting DLS Envirotech Application`);\nconsole.log(`🌐 Binding to 0.0.0.0:5000 for Replit compatibility`);\n\nimport { spawn } from \"child_process\";\nimport { resolve, dirname } from \"path\";\nimport { fileURLToPath } from \"url\";\n\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = dirname(__filename);\nconst clientDir = resolve(__dirname, \"..\", \"client\");\n\n// Set environment variables for proper Vite operation\nprocess.env.NODE_ENV = 'development';\nprocess.env.VITE_PORT = '5000';\nprocess.env.VITE_HOST = '0.0.0.0';\n\nconsole.log(`📁 Starting Vite dev server from: ${clientDir}`);\n\n// Start Vite development server with proper configuration using dev config\nconst viteProcess = spawn('npx', ['vite', '--config', 'vite.config.dev.ts', '--host', '0.0.0.0', '--port', '5000', '--strictPort'], {\n  cwd: clientDir,\n  stdio: 'inherit',\n  env: {\n    ...process.env,\n    NODE_ENV: 'development',\n    FORCE_COLOR: '1'\n  }\n});\n\nviteProcess.on('error', (error) => {\n  console.error(`❌ Failed to start Vite server: ${error.message}`);\n  // Fallback: try installing dependencies first\n  console.log('💡 Attempting to install client dependencies...');\n  const installProcess = spawn('npm', ['install'], {\n    cwd: clientDir,\n    stdio: 'inherit'\n  });\n  \n  installProcess.on('close', (code) => {\n    if (code === 0) {\n      console.log('✅ Dependencies installed, restarting Vite...');\n      // Restart Vite after installation\n      const retryVite = spawn('npx', ['vite', '--host', '0.0.0.0', '--port', '5000', '--strictPort'], {\n        cwd: clientDir,\n        stdio: 'inherit',\n        env: { ...process.env, NODE_ENV: 'development' }\n      });\n    } else {\n      console.error('❌ Failed to install dependencies');\n    }\n  });\n});\n\nviteProcess.on('close', (code) => {\n  if (code !== 0) {\n    console.log(`⚠️ Vite process exited with code ${code}`);\n  }\n});\n\n// Handle process termination\nprocess.on('SIGINT', () => {\n  console.log('🛑 Shutting down...');\n  viteProcess.kill('SIGINT');\n  process.exit(0);\n});\n\nprocess.on('SIGTERM', () => {\n  console.log('🛑 Shutting down...');\n  viteProcess.kill('SIGTERM');\n  process.exit(0);\n});","size_bytes":2320},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { ThemeProvider } from \"@/contexts/theme-context\";\nimport NotFound from \"@/pages/not-found\";\nimport Home from \"@/pages/home\";\nimport Services from \"@/pages/services\";\nimport Portfolio from \"@/pages/portfolio\";\nimport Gallery from \"@/pages/gallery\";\nimport About from \"@/pages/about\";\nimport Contact from \"@/pages/contact\";\nimport Quote from \"@/pages/quote\";\nimport NewsPage from \"./pages/news\";\nimport Sitemap from \"@/pages/sitemap\";\nimport Career from \"@/pages/career\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} />\n      <Route path=\"/services\" component={Services} />\n      <Route path=\"/portfolio\" component={Portfolio} />\n      <Route path=\"/gallery\" component={Gallery} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/contact\" component={Contact} />\n      <Route path=\"/quote\" component={Quote} />\n      <Route path=\"/news\" component={NewsPage} />\n      <Route path=\"/career\" component={Career} />\n      <Route path=\"/sitemap\" component={Sitemap} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <ThemeProvider defaultTheme=\"light\" storageKey=\"dls-theme\">\n      <QueryClientProvider client={queryClient}>\n        <TooltipProvider>\n          <Toaster />\n          <Router />\n        </TooltipProvider>\n      </QueryClientProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","size_bytes":1661},"client/src/index.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(0, 0%, 100%);\n  --foreground: hsl(222, 84%, 4%);\n  --muted: hsl(210, 40%, 98%);\n  --muted-foreground: hsl(215, 16%, 46%);\n  --popover: hsl(0, 0%, 100%);\n  --popover-foreground: hsl(222, 84%, 4%);\n  --card: hsl(0, 0%, 100%);\n  --card-foreground: hsl(222, 84%, 4%);\n  --border: hsl(214, 32%, 91%);\n  --input: hsl(214, 32%, 91%);\n  --primary: hsl(142, 76%, 36%);\n  --primary-foreground: hsl(210, 40%, 98%);\n  --secondary: hsl(207, 90%, 54%);\n  --secondary-foreground: hsl(210, 40%, 98%);\n  --accent: hsl(0, 84%, 60%);\n  --accent-foreground: hsl(210, 40%, 98%);\n  --destructive: hsl(0, 84%, 60%);\n  --destructive-foreground: hsl(210, 40%, 98%);\n  --ring: hsl(222, 84%, 4%);\n  --radius: 0.5rem;\n  \n  /* Industrial color scheme */\n  --industrial-50: hsl(210, 40%, 98%);\n  --industrial-100: hsl(210, 40%, 96%);\n  --industrial-200: hsl(214, 32%, 91%);\n  --industrial-300: hsl(213, 27%, 84%);\n  --industrial-400: hsl(215, 20%, 65%);\n  --industrial-500: hsl(215, 16%, 46%);\n  --industrial-600: hsl(215, 19%, 35%);\n  --industrial-700: hsl(215, 25%, 27%);\n  --industrial-800: hsl(217, 33%, 17%);\n  --industrial-900: hsl(222, 84%, 4%);\n}\n\n.dark {\n  --background: hsl(222, 84%, 4%);\n  --foreground: hsl(210, 40%, 98%);\n  --muted: hsl(217, 33%, 17%);\n  --muted-foreground: hsl(215, 20%, 65%);\n  --popover: hsl(222, 84%, 4%);\n  --popover-foreground: hsl(210, 40%, 98%);\n  --card: hsl(222, 84%, 4%);\n  --card-foreground: hsl(210, 40%, 98%);\n  --border: hsl(217, 33%, 17%);\n  --input: hsl(217, 33%, 17%);\n  --primary: hsl(142, 76%, 36%);\n  --primary-foreground: hsl(222, 84%, 4%);\n  --secondary: hsl(207, 90%, 54%);\n  --secondary-foreground: hsl(222, 84%, 4%);\n  --accent: hsl(0, 84%, 60%);\n  --accent-foreground: hsl(222, 84%, 4%);\n  --destructive: hsl(0, 62%, 30%);\n  --destructive-foreground: hsl(210, 40%, 98%);\n  --ring: hsl(212, 12%, 87%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n}\n\n@layer utilities {\n  .text-industrial-50 {\n    color: hsl(210, 40%, 98%);\n  }\n  .text-industrial-100 {\n    color: hsl(210, 40%, 96%);\n  }\n  .text-industrial-200 {\n    color: hsl(214, 32%, 91%);\n  }\n  .text-industrial-300 {\n    color: hsl(213, 27%, 84%);\n  }\n  .text-industrial-400 {\n    color: hsl(215, 20%, 65%);\n  }\n  .text-industrial-500 {\n    color: hsl(215, 16%, 46%);\n  }\n  .text-industrial-600 {\n    color: hsl(215, 19%, 35%);\n  }\n  .text-industrial-700 {\n    color: hsl(215, 25%, 27%);\n  }\n  .text-industrial-800 {\n    color: hsl(217, 33%, 17%);\n  }\n  .text-industrial-900 {\n    color: hsl(222, 84%, 4%);\n  }\n  \n  .bg-industrial-50 {\n    background-color: hsl(210, 40%, 98%);\n  }\n  .bg-industrial-100 {\n    background-color: hsl(210, 40%, 96%);\n  }\n  .bg-industrial-200 {\n    background-color: hsl(214, 32%, 91%);\n  }\n  .bg-industrial-300 {\n    background-color: hsl(213, 27%, 84%);\n  }\n  .bg-industrial-400 {\n    background-color: hsl(215, 20%, 65%);\n  }\n  .bg-industrial-500 {\n    background-color: hsl(215, 16%, 46%);\n  }\n  .bg-industrial-600 {\n    background-color: hsl(215, 19%, 35%);\n  }\n  .bg-industrial-700 {\n    background-color: hsl(215, 25%, 27%);\n  }\n  .bg-industrial-800 {\n    background-color: hsl(217, 33%, 17%);\n  }\n  .bg-industrial-900 {\n    background-color: hsl(222, 84%, 4%);\n  }\n  .bg-industrial-950 {\n    background-color: hsl(222, 84%, 2%);\n  }\n}\n","size_bytes":3428},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/constants.tsx":{"content":"import { ServiceType, PortfolioProject, TestimonialType } from \"@/types\";\nimport { Droplets, Building2, Recycle, Gauge, Thermometer, Settings } from \"lucide-react\";\n\nexport const SERVICES: ServiceType[] = [\n  {\n    id: \"stp\",\n    title: \"Sewage Treatment Plants (STP)\",\n    description: \"Advanced biological and chemical treatment systems for municipal and residential wastewater management with high efficiency.\",\n    features: [\"Biological Treatment\", \"Chemical Treatment\", \"Sludge Management\"],\n    icon: \"Droplets\",\n    category: \"water-treatment\"\n  },\n  {\n    id: \"etp\",\n    title: \"Effluent Treatment Plants (ETP)\",\n    description: \"Specialized industrial effluent treatment systems ensuring regulatory compliance and environmental protection.\",\n    features: [\"Chemical Treatment\", \"Physical Separation\", \"Biological Processing\"],\n    icon: \"Building2\",\n    category: \"industrial\"\n  },\n  {\n    id: \"wtp\",\n    title: \"Water Treatment Plants (WTP)\",\n    description: \"Comprehensive water purification systems for municipal and industrial applications with advanced filtration technology.\",\n    features: [\"Multi-stage Filtration\", \"Chemical Dosing\", \"Quality Monitoring\"],\n    icon: \"Droplets\",\n    category: \"water-treatment\"\n  },\n  {\n    id: \"industrial-ro\",\n    title: \"Industrial RO Plants\",\n    description: \"High-capacity reverse osmosis plants for industrial water purification and process water treatment.\",\n    features: [\"Multi-stage Filtration\", \"High Recovery Rate\", \"Automated Controls\"],\n    icon: \"Gauge\",\n    category: \"industrial\"\n  },\n  {\n    id: \"water-cooling-tower\",\n    title: \"Water Cooling Towers\",\n    description: \"Industrial cooling tower systems for heat rejection in power plants, manufacturing facilities, and HVAC applications.\",\n    features: [\"Counter Flow Design\", \"High Efficiency\", \"Corrosion Resistant\"],\n    icon: \"Thermometer\",\n    category: \"industrial\"\n  },\n  {\n    id: \"fstp\",\n    title: \"Faecal Sludge Treatment Plants (FSTP)\",\n    description: \"Specialized treatment systems for faecal sludge management with advanced processing and sanitization technology.\",\n    features: [\"Sludge Dewatering\", \"Pathogen Removal\", \"Resource Recovery\"],\n    icon: \"Recycle\",\n    category: \"water-treatment\"\n  },\n  {\n    id: \"mrf\",\n    title: \"Material Recovery Facilities (MRF)\",\n    description: \"Advanced sorting and processing facilities for recyclable materials with automated separation technology.\",\n    features: [\"Automated Sorting\", \"Material Recovery\", \"Quality Control\"],\n    icon: \"Recycle\",\n    category: \"waste-management\"\n  },\n  {\n    id: \"solid-waste-management\",\n    title: \"Solid Waste Management Plants\",\n    description: \"Comprehensive solid waste processing facilities including composting, recycling, and waste-to-energy solutions.\",\n    features: [\"Waste Processing\", \"Composting\", \"Energy Recovery\"],\n    icon: \"Recycle\",\n    category: \"waste-management\"\n  },\n  {\n    id: \"psa-oxygen\",\n    title: \"PSA Oxygen Plants\",\n    description: \"Pressure Swing Adsorption oxygen generation plants for medical, industrial, and aquaculture applications.\",\n    features: [\"High Purity Oxygen\", \"Energy Efficient\", \"Automated Operation\"],\n    icon: \"Settings\",\n    category: \"industrial\"\n  },\n  {\n    id: \"air-pollution-solutions\",\n    title: \"Industrial Air Pollution Solutions\",\n    description: \"Advanced air pollution control systems including scrubbers, baghouse filters, and emission monitoring.\",\n    features: [\"Emission Control\", \"Air Scrubbers\", \"Monitoring Systems\"],\n    icon: \"Settings\",\n    category: \"industrial\"\n  },\n  {\n    id: \"air-tower\",\n    title: \"Air Towers\",\n    description: \"Industrial air circulation and ventilation tower systems for improved air quality and environmental control.\",\n    features: [\"Air Circulation\", \"Ventilation Control\", \"Environmental Management\"],\n    icon: \"Settings\",\n    category: \"industrial\"\n  }\n];\n\nexport const PORTFOLIO_PROJECTS: PortfolioProject[] = [\n  {\n    id: \"municipal-stp-50mld\",\n    title: \"Municipal STP - 50 MLD Capacity\",\n    description: \"Advanced biological treatment system for municipal wastewater serving 200,000 population equivalent.\",\n    image: \"https://images.unsplash.com/photo-1558618047-3c8c76ca7d13?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1000&q=80\",\n    category: [\"stp\", \"municipal\"],\n    tags: [\"STP\", \"Municipal\"],\n    capacity: \"50 MLD\",\n    technology: \"SBR + MBR\",\n    location: \"Gujarat, India\"\n  },\n  {\n    id: \"textile-etp-zld\",\n    title: \"Textile Industry ETP - ZLD System\",\n    description: \"Zero Liquid Discharge system for textile manufacturing facility with advanced chemical treatment.\",\n    image: \"https://images.unsplash.com/photo-1605810230434-7631ac76ec81?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1000&q=80\",\n    category: [\"etp\", \"industrial\"],\n    tags: [\"ETP\", \"Industrial\"],\n    capacity: \"15 MLD\",\n    technology: \"ZLD + RO\",\n    industry: \"Textile\"\n  },\n  {\n    id: \"pharmaceutical-ro-dm\",\n    title: \"Pharmaceutical RO & DM Plant\",\n    description: \"High-purity water production system for pharmaceutical manufacturing with stringent quality requirements.\",\n    image: \"https://images.unsplash.com/photo-1576091160399-112ba8d25d1f?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1000&q=80\",\n    category: [\"industrial\"],\n    tags: [\"RO Plant\", \"Industrial\"],\n    capacity: \"5000 LPH\",\n    technology: \"RO + EDI\",\n    industry: \"Pharmaceutical\"\n  },\n  {\n    id: \"cetp-industrial\",\n    title: \"Common Effluent Treatment Plant\",\n    description: \"Centralized treatment facility serving multiple industrial units in manufacturing cluster.\",\n    image: \"https://images.unsplash.com/photo-1621335223658-0ebd89004d51?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1000&q=80\",\n    category: [\"etp\", \"industrial\"],\n    tags: [\"CETP\", \"Industrial\"],\n    capacity: \"25 MLD\",\n    technology: \"MBBR + UF\",\n    industry: \"Manufacturing\"\n  },\n  {\n    id: \"smart-city-stp\",\n    title: \"Smart City STP with IoT Monitoring\",\n    description: \"Next-generation sewage treatment plant with real-time monitoring and automated control systems.\",\n    image: \"https://images.unsplash.com/photo-1599586120429-48281b6f0ece?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1000&q=80\",\n    category: [\"stp\", \"municipal\"],\n    tags: [\"STP\", \"Municipal\"],\n    capacity: \"100 MLD\",\n    technology: \"Smart SBR\",\n    location: \"Smart City Project\"\n  },\n  {\n    id: \"power-plant-cooling\",\n    title: \"Power Plant Cooling System\",\n    description: \"Large-scale cooling tower system for thermal power plant with advanced heat rejection technology.\",\n    image: \"https://images.unsplash.com/photo-1473116763246-b726752ebc2f?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1000&q=80\",\n    category: [\"industrial\"],\n    tags: [\"Cooling Tower\", \"Power Plant\"],\n    capacity: \"50,000 TR\",\n    technology: \"Counter Flow\",\n    industry: \"Power Generation\"\n  }\n];\n\nexport const TESTIMONIALS: TestimonialType[] = [\n  {\n    id: \"testimonial-1\",\n    name: \"Arjun Kumar\",\n    position: \"Plant Manager\",\n    company: \"ABC Textiles\",\n    content: \"DLS Envirotech delivered an exceptional ETP solution that not only meets all regulatory requirements but also achieved 40% reduction in our water consumption through their innovative recycling system.\",\n    rating: 5,\n    project: \"Zero Liquid Discharge Implementation\"\n  },\n  {\n    id: \"testimonial-2\",\n    name: \"Priya Sharma\",\n    position: \"Municipal Engineer\",\n    company: \"City Corporation\",\n    content: \"The 50 MLD STP project was completed ahead of schedule with excellent quality. The automated monitoring system has significantly reduced our operational costs and improved treatment efficiency.\",\n    rating: 5,\n    project: \"Municipal STP Project\"\n  },\n  {\n    id: \"testimonial-3\",\n    name: \"Raj Gupta\",\n    position: \"Operations Director\",\n    company: \"PharmaCorp\",\n    content: \"Outstanding technical support and maintenance services. Their RO system consistently produces pharmaceutical-grade water that exceeds USP standards. Highly recommended for critical applications.\",\n    rating: 5,\n    project: \"Pharmaceutical Water System\"\n  },\n  {\n    id: \"testimonial-4\",\n    name: \"Priya Sharma\",\n    position: \"Municipal Engineer\",\n    company: \"City Corporation\",\n    content: \"The 50 MLD STP project was completed ahead of schedule with excellent quality. The automated monitoring system has significantly reduced our operational costs and improved treatment efficiency.\",\n    rating: 5,\n    project: \"Municipal STP Project\"\n  },\n  {\n    id: \"testimonial-5\",\n    name: \"Priya Sharma\",\n    position: \"Municipal Engineer\",\n    company: \"City Corporation\",\n    content: \"The 50 MLD STP project was completed ahead of schedule with excellent quality. The automated monitoring system has significantly reduced our operational costs and improved treatment efficiency.\",\n    rating: 5,\n    project: \"Municipal STP Project\"\n  },\n  {\n    id: \"testimonial-6\",\n    name: \"Priya Sharma\",\n    position: \"Municipal Engineer\",\n    company: \"City Corporation\",\n    content: \"The 50 MLD STP project was completed ahead of schedule with excellent quality. The automated monitoring system has significantly reduced our operational costs and improved treatment efficiency.\",\n    rating: 5,\n    project: \"Municipal STP Project\"\n  },\n];\n\nexport const QUICK_CHAT_MESSAGES = [\n  \"What is STP capacity calculation?\",\n  \"ETP technology options\",\n  \"Get pricing quote\",\n  \"RO system specifications\",\n  \"Cooling tower capacity\",\n  \"Maintenance services\"\n];\n","size_bytes":9803},"client/src/lib/mockApi.ts":{"content":"// Import external library for fuzzy string matching\nimport stringSimilarity from \"string-similarity\";\n\n// Define the shape of a chat message\nexport interface ChatMessage {\n  id: string;\n  message: string;\n  response: string;\n  sessionId: string;\n  timestamp: Date;\n  redirectUrl?: string;\n}\n\n// Mapping of recognized keywords to chatbot responses and optional redirect URLs\nconst keywordMap: Record<string, { text: string; redirectUrl?: string }> = {\n  stp: {\n    text: \"We provide MBBR and MBR-based STP (Sewage Treatment Plant) systems for housing societies, hotels, and industries. Plants meet CPCB norms and range from 5 KLD to 10 MLD.\",\n    redirectUrl: \"\", // TODO: Add STP service page URL\n  },\n  \"sewage treatment plant\": {\n    text: \"We provide MBBR and MBR-based STP (Sewage Treatment Plant) systems for housing societies, hotels, and industries. Plants meet CPCB norms and range from 5 KLD to 10 MLD.\",\n    redirectUrl: \"\",\n  },\n  etp: {\n    text: \"Our ETP (Effluent Treatment Plant) systems are custom-designed for textiles, pharma, and chemical industries with ZLD-ready configurations.\",\n    redirectUrl: \"\",\n  },\n  \"effluent treatment plant\": {\n    text: \"Our ETP (Effluent Treatment Plant) systems are custom-designed for textiles, pharma, and chemical industries with ZLD-ready configurations.\",\n    redirectUrl: \"\",\n  },\n  wtp: {\n    text: \"We offer RO, softeners, ultrafiltration and disinfection systems for borewell, river and municipal water.\",\n    redirectUrl: \"\",\n  },\n  \"water treatment plant\": {\n    text: \"We offer RO, softeners, ultrafiltration and disinfection systems for borewell, river and municipal water.\",\n    redirectUrl: \"\",\n  },\n  fstp: {\n    text: \"FSTPs (Faecal Sludge Treatment Plants) by DLS are decentralized/containerized faecal sludge processing units with solar drying & pathogen kill.\",\n    redirectUrl: \"\",\n  },\n  \"faecal sludge treatment plant\": {\n    text: \"FSTPs (Faecal Sludge Treatment Plants) by DLS are decentralized/containerized faecal sludge processing units with solar drying & pathogen kill.\",\n    redirectUrl: \"\",\n  },\n  mrf: {\n    text: \"Our MRF (Material Recovery Facility) systems recover recyclables using conveyors, trommels, and balers for plastic, paper, metal, and glass.\",\n    redirectUrl: \"\",\n  },\n  \"material recovery facility\": {\n    text: \"Our MRF (Material Recovery Facility) systems recover recyclables using conveyors, trommels, and balers for plastic, paper, metal, and glass.\",\n    redirectUrl: \"\",\n  },\n  \"solid waste\": {\n    text: \"We offer complete Solid Waste Management including segregation, composting, RDF & landfill design.\",\n    redirectUrl: \"\",\n  },\n  \"solid waste management\": {\n    text: \"We offer complete Solid Waste Management including segregation, composting, RDF & landfill design.\",\n    redirectUrl: \"\",\n  },\n  psa: {\n    text: \"PSA Oxygen Plants deliver 93±3% purity. Ideal for hospitals & industries with 10–500 Nm³/hr options.\",\n    redirectUrl: \"\",\n  },\n  \"psa oxygen plant\": {\n    text: \"PSA Oxygen Plants deliver 93±3% purity. Ideal for hospitals & industries with 10–500 Nm³/hr options.\",\n    redirectUrl: \"\",\n  },\n  \"air pollution\": {\n    text: \"We build air pollution control equipment like scrubbers, carbon units & air towers for industries & public zones.\",\n    redirectUrl: \"\",\n  },\n  \"cooling tower\": {\n    text: \"We supply FRP cooling towers for HVAC, process & thermal applications. Models up to 2000 TR.\",\n    redirectUrl: \"\",\n  },\n  \"filter press\": {\n    text: \"We supply industrial-grade filter presses for sludge dewatering in STP, ETP, and FSTP applications.\",\n    redirectUrl: \"\",\n  },\n  \"sand filter\": {\n    text: \"Sand Filters provide effective pre-treatment in WTP and RO systems for suspended solids removal.\",\n    redirectUrl: \"\",\n  },\n  \"water softening\": {\n    text: \"Our Water Softening Plants reduce hardness using ion-exchange resin for domestic and industrial applications.\",\n    redirectUrl: \"\",\n  },\n  \"filter vessel\": {\n    text: \"We offer FRP/MS Filter Vessels for media filtration in water and process industries.\",\n    redirectUrl: \"\",\n  },\n  \"industrial water filter\": {\n    text: \"DLS supplies cartridge, bag, and media filters for high-flow industrial water treatment.\",\n    redirectUrl: \"\",\n  },\n  \"trommel screen\": {\n    text: \"Trommel Screens are used in MRFs and SWM facilities for size-based segregation of waste streams.\",\n    redirectUrl: \"\",\n  },\n  \"ion exchange\": {\n    text: \"We supply premium-grade Ion Exchange Resin for softeners, DM, and mixed-bed polishers.\",\n    redirectUrl: \"\",\n  },\n  \"wtp o&m\": {\n    text: \"We provide skilled O&M services for existing WTPs including reporting, lab testing, and performance audits.\",\n    redirectUrl: \"\",\n  },\n  \"stp o&m\": {\n    text: \"Our STP O&M contracts include trained operators, regular maintenance, and statutory compliance.\",\n    redirectUrl: \"\",\n  },\n  \"bio culture\": {\n    text: \"DLS supplies activated bio cultures and bacterial strains for sludge reduction and odor control.\",\n    redirectUrl: \"\",\n  },\n  \"bio fertilizer\": {\n    text: \"Our Bio-Fertilizers improve soil health and crop productivity, derived from FSTP outputs.\",\n    redirectUrl: \"\",\n  },\n  \"organic capsule\": {\n    text: \"Organic Capsules enriched with microbes aid in septic digestion and biogas plant efficiency.\",\n    redirectUrl: \"\",\n  },\n  \"fabrication service\": {\n    text: \"We offer MS/SS tank, skid, and ducting fabrication services for environmental projects.\",\n    redirectUrl: \"\",\n  },\n  disinfectant: {\n    text: \"We manufacture eco-safe disinfectants for treated water, surfaces, and sludge sanitation.\",\n    redirectUrl: \"\",\n  },\n  \"wastewater treatment\": {\n    text: \"Our wastewater solutions include STP, ETP, and decentralized systems for all sectors.\",\n    redirectUrl: \"\",\n  },\n  price: {\n    text: \"Pricing depends on technology & site needs. STPs ₹15–50L, ETPs ₹25–120L. Request a formal quote?\",\n    redirectUrl: \"\",\n  },\n  maintenance: {\n    text: \"We offer AMC & O&M with preventive checks, breakdown support, training & pollution compliance.\",\n    redirectUrl: \"\",\n  },\n  hi: {\n    text: \"Welcome to DLS Envirotech — your partner for turnkey water, waste, and air treatment solutions. Let us know what you're looking for: STP, ETP, WTP, PSA Oxygen, Solid Waste, FSTP, MRF, Cooling Towers, or custom services.\",\n    redirectUrl: \"\",\n  },\n};\n\n// Return the best matching response based on fuzzy similarity\nfunction getBestMatchResponse(message: string): {\n  text: string;\n  redirectUrl?: string;\n} {\n  const lowerMessage = message.toLowerCase();\n  const words = lowerMessage.split(/\\s+/);\n  const keys = Object.keys(keywordMap);\n\n  let bestMatch = { target: \"\", rating: 0 };\n\n  for (const word of words) {\n    const result = stringSimilarity.findBestMatch(word, keys);\n    if (result.bestMatch.rating > bestMatch.rating) {\n      bestMatch = result.bestMatch;\n    }\n  }\n\n  if (bestMatch.rating >= 0.5) {\n    return keywordMap[bestMatch.target];\n  }\n\n  return {\n    text: \"Please specify which service you're looking for.\",\n  };\n}\n\n// LocalStorage-based mock backend\nclass MockStorage {\n  private getStorageKey(type: string): string {\n    return `dls_${type}`;\n  }\n\n  private getItems<T>(type: string): T[] {\n    const data = localStorage.getItem(this.getStorageKey(type));\n    return data ? JSON.parse(data) : [];\n  }\n\n  private setItems<T>(type: string, items: T[]): void {\n    localStorage.setItem(this.getStorageKey(type), JSON.stringify(items));\n  }\n\n  // Create and store a chat message\n  async createChatMessage(data: {\n    message: string;\n    sessionId: string;\n  }): Promise<ChatMessage & { redirectUrl?: string }> {\n    const result = getBestMatchResponse(data.message);\n\n    const chatMessage: ChatMessage = {\n      id: Date.now().toString(),\n      message: data.message,\n      response: result.text,\n      sessionId: data.sessionId,\n      timestamp: new Date(),\n    };\n\n    const messages = this.getItems<ChatMessage>(\"chat_messages\");\n    messages.push(chatMessage);\n    this.setItems(\"chat_messages\", messages);\n\n    return { ...chatMessage, redirectUrl: result.redirectUrl };\n  }\n\n  // Fetch all chat messages for a session\n  async getChatMessages(sessionId: string): Promise<ChatMessage[]> {\n    const messages = this.getItems<ChatMessage>(\"chat_messages\");\n    return messages.filter((msg) => msg.sessionId === sessionId);\n  }\n}\n\nexport const mockStorage = new MockStorage();\n\n// Exposed API wrapper to interact with chatbot data\nexport const mockApi = {\n  async sendChatMessage(message: string, sessionId: string) {\n    const chatMessage = await mockStorage.createChatMessage({\n      message,\n      sessionId,\n    });\n    return {\n      response: chatMessage.response,\n      redirectUrl: chatMessage.redirectUrl,\n    };\n  },\n\n  async getChatHistory(sessionId: string) {\n    return mockStorage.getChatMessages(sessionId);\n  },\n};\n","size_bytes":8860},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/about.tsx":{"content":"import { Helmet } from \"react-helmet\";\nimport Header from \"@/components/layout/header\";\nimport Footer from \"@/components/layout/footer\";\nimport AboutSection from \"@/components/sections/about-section\";\nimport TestimonialsSection from \"@/components/sections/testimonials-section\";\nimport ChatbotWidget from \"@/components/chatbot/chatbot-widget\";\nimport { Button } from \"@/components/ui/button\";\nimport { Link } from \"wouter\";\nimport { Phone, Award, Users, Globe, Zap, AlertCircle } from \"lucide-react\";\nimport Timeline from \"@/components/ui/timeline\";\nimport { motion } from \"framer-motion\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport dlsLogo from \"@assets/dlsLogo-removebg-preview_1753515549861.png\";\n\nconst About = () => {\n  const milestones = [\n    {\n      year: \"2009\",\n      title: \"Company Founded\",\n      description:\n        \"Started with a vision to provide innovative water treatment solutions\",\n    },\n    {\n      year: \"2012\",\n      title: \"First International Project\",\n      description:\n        \"Expanded operations beyond India with our first overseas installation\",\n    },\n    {\n      year: \"2015\",\n      title: \"ISO Certification\",\n      description:\n        \"Achieved ISO 9001:2015 certification for quality management\",\n    },\n    {\n      year: \"2018\",\n      title: \"1000th System\",\n      description:\n        \"Milestone achievement of 1000 successful system installations\",\n    },\n    {\n      year: \"2021\",\n      title: \"Green Technology\",\n      description:\n        \"Launched eco-friendly and energy-efficient treatment solutions\",\n    },\n    {\n      year: \"2024\",\n      title: \"Global Presence\",\n      description:\n        \"Serving clients across 22 countries with 2500+ installations\",\n    },\n  ];\n\n  const values = [\n    {\n      icon: Award,\n      title: \"Quality Excellence\",\n      description:\n        \"Committed to delivering the highest quality water treatment solutions with rigorous testing and quality control.\",\n    },\n    {\n      icon: Users,\n      title: \"Customer Focus\",\n      description:\n        \"Building long-term relationships with our clients through exceptional service and ongoing support.\",\n    },\n    {\n      icon: Globe,\n      title: \"Environmental Responsibility\",\n      description:\n        \"Developing sustainable solutions that protect our environment for future generations.\",\n    },\n    {\n      icon: Zap,\n      title: \"Innovation\",\n      description:\n        \"Continuously investing in R&D to develop cutting-edge treatment technologies and methodologies.\",\n    },\n  ];\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          About Us - 10+ Years Water Treatment Expertise | DLS Envirotech\n        </title>\n        <meta\n          name=\"description\"\n          content=\"Learn about DLS Envirotech Corporation's 15+ years of expertise in water treatment technology. Our journey, values, and commitment to environmental solutions.\"\n        />\n        <meta\n          name=\"keywords\"\n          content=\"about DLS Envirotech, water treatment company, environmental technology expertise, company history, water treatment experience\"\n        />\n      </Helmet>\n\n      <div className=\"min-h-screen bg-white\">\n        <Header />\n        <main>\n          {/* Hero Section */}\n          <section className=\"bg-gradient-to-br from-industrial-50 to-industrial-100 py-20\">\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n              <h1 className=\"text-5xl font-bold text-industrial-900 mb-6\">\n                About DLS Envirotech Corporation\n              </h1>\n              <p className=\"text-xl text-industrial-600 max-w-3xl mx-auto mb-8\">\n                With over 10 years of excellence in water treatment technology,\n                we have established ourselves as a trusted partner for\n                environmental solutions worldwide.\n              </p>\n              <Button size=\"lg\" asChild>\n                <Link href=\"/contact\">\n                  <Phone className=\"mr-2 h-5 w-5\" />\n                  Partner With Us\n                </Link>\n              </Button>\n            </div>\n          </section>\n\n          {/* About Section */}\n          <AboutSection />\n\n          {/* Our Values */}\n          <section className=\"py-20 bg-industrial-50\">\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n              <div className=\"text-center mb-16\">\n                <h2 className=\"text-4xl font-bold text-industrial-900 mb-4\">\n                  Our Core Values\n                </h2>\n                <p className=\"text-xl text-industrial-600 max-w-3xl mx-auto\">\n                  The principles that guide our commitment to excellence and\n                  environmental responsibility\n                </p>\n              </div>\n\n              <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8\">\n                {values.map((value) => (\n                  <div\n                    key={value.title}\n                    className=\"bg-white rounded-xl p-8 text-center shadow-lg hover:shadow-xl transition-shadow\"\n                  >\n                    <div className=\"bg-primary text-white p-4 rounded-xl w-16 h-16 flex items-center justify-center mx-auto mb-6\">\n                      <value.icon className=\"h-8 w-8\" />\n                    </div>\n                    <h3 className=\"text-xl font-bold text-industrial-900 mb-4\">\n                      {value.title}\n                    </h3>\n                    <p className=\"text-industrial-600 leading-relaxed\">\n                      {value.description}\n                    </p>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </section>\n\n          {/* Timeline */}\n          <Timeline milestones={milestones} />\n\n          {/* Testimonials */}\n          <TestimonialsSection />\n\n          {/* Call to Action */}\n          <section className=\"py-20 bg-industrial-50\">\n            <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n              <h2 className=\"text-3xl font-bold text-industrial-900 mb-6\">\n                Ready to Experience Our Expertise?\n              </h2>\n              <p className=\"text-lg text-industrial-600 mb-8\">\n                Join thousands of satisfied clients who trust DLS Envirotech for\n                their critical water treatment infrastructure needs.\n              </p>\n              <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n                <Button size=\"lg\" asChild>\n                  <Link href=\"/contact\">Get Started Today</Link>\n                </Button>\n                <Button variant=\"outline\" size=\"lg\" asChild>\n                  <Link href=\"/portfolio\">View Our Work</Link>\n                </Button>\n              </div>\n            </div>\n          </section>\n        </main>\n        <Footer />\n        <ChatbotWidget />\n      </div>\n    </>\n  );\n};\n\nexport default About;\n","size_bytes":6897},"client/src/pages/contact.tsx":{"content":"import { Helmet } from \"react-helmet\";\nimport Header from \"@/components/layout/header\";\nimport Footer from \"@/components/layout/footer\";\nimport ContactSection from \"@/components/sections/contact-section\";\nimport ChatbotWidget from \"@/components/chatbot/chatbot-widget\";\n\nconst Contact = () => {\n  return (\n    <>\n      <Helmet>\n        <title>Contact Us - Get Water Treatment Consultation | DLS Envirotech</title>\n        <meta name=\"description\" content=\"Contact DLS Envirotech for professional water treatment consultation. Call +1 956 857 2005 or email contact@dlsenvirotech.com for expert environmental solutions.\" />\n        <meta name=\"keywords\" content=\"contact water treatment company, environmental technology consultation, STP ETP consultation, water treatment expert\" />\n      </Helmet>\n      \n      <div className=\"min-h-screen bg-white\">\n        <Header />\n        <main>\n          {/* Hero Section */}\n          <section className=\"bg-gradient-to-br from-industrial-50 to-industrial-100 py-20\">\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n              <h1 className=\"text-5xl font-bold text-industrial-900 mb-6\">\n                Contact Our Water Treatment Experts\n              </h1>\n              <p className=\"text-xl text-industrial-600 max-w-3xl mx-auto mb-8\">\n                Get professional consultation for your water treatment requirements. Our team of experts \n                is ready to provide customized solutions for your specific needs.\n              </p>\n              <div className=\"grid md:grid-cols-3 gap-8 max-w-2xl mx-auto\">\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-primary mb-2\">24/7</div>\n                  <div className=\"text-industrial-600\">Support Available</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-secondary mb-2\">24hrs</div>\n                  <div className=\"text-industrial-600\">Response Time</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-accent mb-2\">Free</div>\n                  <div className=\"text-industrial-600\">Consultation</div>\n                </div>\n              </div>\n            </div>\n          </section>\n\n          {/* Contact Section */}\n          <ContactSection />\n        </main>\n        <Footer />\n        <ChatbotWidget />\n      </div>\n    </>\n  );\n};\n\nexport default Contact;\n","size_bytes":2527},"client/src/pages/gallery.tsx":{"content":"import { Helmet } from \"react-helmet\";\nimport Header from \"@/components/layout/header\";\nimport Footer from \"@/components/layout/footer\";\nimport ChatbotWidget from \"@/components/chatbot/chatbot-widget\";\nimport { Button } from \"@/components/ui/button\";\nimport { Link } from \"wouter\";\nimport { Phone, ZoomIn } from \"lucide-react\";\n\nconst Gallery = () => {\n  const galleryImages = [\n    {\n      id: 1,\n      title: \"Municipal STP - 50 MLD Capacity\",\n      category: \"Sewage Treatment\",\n      image: \"https://images.unsplash.com/photo-1558618047-3c8c76ca7d13?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1000&q=80\",\n      description: \"Advanced biological treatment system for municipal wastewater\"\n    },\n    {\n      id: 2,\n      title: \"Industrial ETP System\",\n      category: \"Effluent Treatment\",\n      image: \"https://images.unsplash.com/photo-1605810230434-7631ac76ec81?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1000&q=80\",\n      description: \"Zero Liquid Discharge system for textile manufacturing facility\"\n    },\n    {\n      id: 3,\n      title: \"RO Plant Installation\",\n      category: \"Water Purification\",\n      image: \"https://images.unsplash.com/photo-1576091160399-112ba8d25d1f?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1000&q=80\",\n      description: \"High-purity water production system for pharmaceutical use\"\n    },\n    {\n      id: 4,\n      title: \"Cooling Tower System\",\n      category: \"Industrial Cooling\",\n      image: \"https://images.unsplash.com/photo-1473116763246-b726752ebc2f?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1000&q=80\",\n      description: \"Large-scale cooling tower for thermal power plant\"\n    },\n    {\n      id: 5,\n      title: \"CETP Construction\",\n      category: \"Common Treatment\",\n      image: \"https://images.unsplash.com/photo-1621335223658-0ebd89004d51?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1000&q=80\",\n      description: \"Centralized treatment facility for industrial cluster\"\n    },\n    {\n      id: 6,\n      title: \"Smart STP with IoT\",\n      category: \"Smart Technology\",\n      image: \"https://images.unsplash.com/photo-1599586120429-48281b6f0ece?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1000&q=80\",\n      description: \"Next-generation sewage treatment with automated monitoring\"\n    },\n    {\n      id: 7,\n      title: \"Waste Heat Recovery\",\n      category: \"Energy Recovery\",\n      image: \"https://images.unsplash.com/photo-1596591606975-97ee5ccd3aa6?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1000&q=80\",\n      description: \"Energy-efficient heat recovery system implementation\"\n    },\n    {\n      id: 8,\n      title: \"Bio-gas Plant\",\n      category: \"Renewable Energy\",\n      image: \"https://images.unsplash.com/photo-1466611653911-95081537e5b7?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1000&q=80\",\n      description: \"Sustainable bio-gas generation from organic waste\"\n    },\n    {\n      id: 9,\n      title: \"Chemical Plant Setup\",\n      category: \"Chemical Processing\",\n      image: \"https://images.unsplash.com/photo-1565793298595-6a879b1d9492?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1000&q=80\",\n      description: \"Complete chemical processing plant installation\"\n    }\n  ];\n\n  const categories = [\"All\", \"Sewage Treatment\", \"Effluent Treatment\", \"Water Purification\", \"Industrial Cooling\", \"Common Treatment\", \"Smart Technology\", \"Energy Recovery\", \"Renewable Energy\", \"Chemical Processing\"];\n\n  return (\n    <>\n      <Helmet>\n        <title>Project Gallery - Water Treatment Installations | DLS Envirotech</title>\n        <meta name=\"description\" content=\"Browse our comprehensive gallery of water treatment project installations. View photos of STP, ETP, RO plants, cooling towers, and other environmental solutions.\" />\n        <meta name=\"keywords\" content=\"water treatment gallery, project photos, STP installation, ETP construction, industrial water treatment images\" />\n      </Helmet>\n      \n      <div className=\"min-h-screen bg-white\">\n        <Header />\n        <main>\n          {/* Hero Section */}\n          <section className=\"bg-gradient-to-br from-industrial-50 to-industrial-100 py-20\">\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n              <h1 className=\"text-5xl font-bold text-industrial-900 mb-6\">\n                Project Gallery\n              </h1>\n              <p className=\"text-xl text-industrial-600 max-w-3xl mx-auto mb-8\">\n                Explore our extensive portfolio of successfully completed water treatment installations \n                across various industries and applications worldwide.\n              </p>\n              <div className=\"grid md:grid-cols-3 gap-8 max-w-2xl mx-auto\">\n                <div className=\"text-center\">\n                  <div className=\"text-3xl font-bold text-primary mb-2\">2500+</div>\n                  <div className=\"text-industrial-600\">Installations</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-3xl font-bold text-secondary mb-2\">22</div>\n                  <div className=\"text-industrial-600\">Countries</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-3xl font-bold text-accent mb-2\">15+</div>\n                  <div className=\"text-industrial-600\">Years Experience</div>\n                </div>\n              </div>\n            </div>\n          </section>\n\n          {/* Gallery Grid */}\n          <section className=\"py-20 bg-white\">\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n              <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n                {galleryImages.map((item) => (\n                  <div key={item.id} className=\"group relative overflow-hidden rounded-xl shadow-lg hover:shadow-2xl transition-all duration-300\">\n                    <div className=\"aspect-w-16 aspect-h-12\">\n                      <img \n                        src={item.image} \n                        alt={item.title}\n                        className=\"w-full h-64 object-cover group-hover:scale-110 transition-transform duration-300\"\n                      />\n                    </div>\n                    \n                    {/* Overlay */}\n                    <div className=\"absolute inset-0 bg-gradient-to-t from-black/80 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\">\n                      <div className=\"absolute bottom-0 left-0 right-0 p-6 text-white\">\n                        <div className=\"text-sm font-semibold text-primary-light mb-2\">\n                          {item.category}\n                        </div>\n                        <h3 className=\"text-xl font-bold mb-2\">\n                          {item.title}\n                        </h3>\n                        <p className=\"text-sm opacity-90\">\n                          {item.description}\n                        </p>\n                      </div>\n                      \n                      <div className=\"absolute top-4 right-4\">\n                        <div className=\"bg-white/20 backdrop-blur-sm rounded-full p-2\">\n                          <ZoomIn className=\"h-5 w-5 text-white\" />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </section>\n\n          {/* Call to Action */}\n          <section className=\"py-20 bg-industrial-50\">\n            <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n              <h2 className=\"text-3xl font-bold text-industrial-900 mb-6\">\n                Ready to See Your Project Here?\n              </h2>\n              <p className=\"text-lg text-industrial-600 mb-8\">\n                Join our gallery of successful installations with a custom water treatment \n                solution designed specifically for your requirements.\n              </p>\n              <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n                <Button size=\"lg\" asChild>\n                  <Link href=\"/contact\">\n                    <Phone className=\"mr-2 h-5 w-5\" />\n                    Get Your Quote\n                  </Link>\n                </Button>\n                <Button variant=\"outline\" size=\"lg\" asChild>\n                  <Link href=\"/portfolio\">\n                    View Case Studies\n                  </Link>\n                </Button>\n              </div>\n            </div>\n          </section>\n        </main>\n        <Footer />\n        <ChatbotWidget />\n      </div>\n    </>\n  );\n};\n\nexport default Gallery;","size_bytes":9034},"client/src/pages/home.tsx":{"content":"import { Helmet } from \"react-helmet\";\nimport Header from \"@/components/layout/header\";\nimport Footer from \"@/components/layout/footer\";\nimport HeroSection from \"@/components/sections/hero-section\";\nimport ServicesOverview from \"@/components/sections/services-overview\";\nimport PortfolioShowcase from \"@/components/sections/portfolio-showcase\";\nimport AboutSection from \"@/components/sections/about-section\";\nimport TestimonialsSection from \"@/components/sections/testimonials-section\";\nimport ContactSection from \"@/components/sections/contact-section\";\nimport ChatbotWidget from \"@/components/chatbot/chatbot-widget\";\n\nconst Home = () => {\n  return (\n    <>\n      <Helmet>\n        <title>DLS Envirotech Corporation - Water Treatment Solutions | Professional Environmental Technology</title>\n        <meta name=\"description\" content=\"Leading provider of water treatment plants, sewage treatment systems, and effluent treatment solutions with 15+ years of expertise in environmental technology.\" />\n        <meta name=\"keywords\" content=\"water treatment plants, sewage treatment, effluent treatment, environmental technology, industrial water solutions\" />\n        <meta property=\"og:title\" content=\"DLS Envirotech Corporation - Water Treatment Solutions\" />\n        <meta property=\"og:description\" content=\"Leading provider of water treatment plants, sewage treatment systems, and effluent treatment solutions with 15+ years of expertise in environmental technology.\" />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:url\" content=\"https://dlsenvirotech.com\" />\n      </Helmet>\n      \n      <div className=\"min-h-screen bg-white\">\n        <Header />\n        <main>\n          <HeroSection />\n          <ServicesOverview />\n          <PortfolioShowcase />\n          <AboutSection />\n          <TestimonialsSection />\n          <ContactSection />\n        </main>\n        <Footer />\n        <ChatbotWidget />\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n","size_bytes":1991},"client/src/pages/news.tsx":{"content":"import { Helmet } from \"react-helmet\";\nimport Header from \"@/components/layout/header\";\nimport Footer from \"@/components/layout/footer\";\nimport ChatbotWidget from \"@/components/chatbot/chatbot-widget\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Link } from \"wouter\";\n\nconst newsArticles = [\n  {\n    id: 1,\n    title: \"DLS Envirotech Expands Operations to Southeast Asia\",\n    date: \"October 26, 2023\",\n    tags: [\"Expansion\", \"Corporate News\", \"Asia\"],\n    summary:\n      \"We are thrilled to announce the opening of our new regional headquarters in Singapore, strengthening our commitment to providing sustainable water solutions in Southeast Asia.\",\n  },\n  {\n    id: 2,\n    title: \"New Air Pollution Control System Launched for Heavy Industries\",\n    date: \"October 15, 2023\",\n    tags: [\"Technology\", \"Air Pollution\", \"Innovation\"],\n    summary:\n      \"Our new scrubber technology sets an industry benchmark, removing over 99.5% of particulate matter and SOx emissions for our industrial partners.\",\n  },\n  {\n    id: 3,\n    title: \"DLS Envirotech Unveils State-of-the-Art Material Recovery Facility\",\n    date: \"September 30, 2023\",\n    tags: [\"Waste Management\", \"MRF\", \"Sustainability\"],\n    summary:\n      \"Our latest Material Recovery Facility (MRF) in Europe now processes over 500 tons of solid waste daily, achieving a 90% resource recovery rate.\",\n  },\n];\n\nconst NewsPage = () => {\n  return (\n    <>\n      <Helmet>\n        <title>News & Updates - DLS Envirotech</title>\n        <meta\n          name=\"description\"\n          content=\"Stay up-to-date with the latest news, events, and technological advancements from DLS Envirotech Corporation.\"\n        />\n      </Helmet>\n      <div className=\"min-h-screen bg-white\">\n        <Header />\n        <main>\n          {/* Hero Section */}\n          <section className=\"bg-gradient-to-br from-industrial-50 to-industrial-100 py-20\">\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n              <h1 className=\"text-5xl font-bold text-industrial-900 mb-6\">\n                Latest News & Updates\n              </h1>\n              <p className=\"text-xl text-industrial-600 max-w-3xl mx-auto mb-8\">\n                Follow our journey as we innovate and expand our reach in the\n                environmental technology sector.\n              </p>\n              <Button size=\"lg\" asChild>\n                <Link href=\"/quote\">Request a Quote</Link>\n              </Button>\n            </div>\n          </section>\n\n          {/* News Grid */}\n          <section className=\"py-20 bg-white\">\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n              <div className=\"grid gap-8 md:grid-cols-2 lg:grid-cols-3\">\n                {newsArticles.map((article) => (\n                  <Card\n                    key={article.id}\n                    className=\"flex flex-col hover:shadow-xl transition-shadow duration-300\"\n                  >\n                    <CardHeader>\n                      <CardTitle className=\"text-xl font-bold text-industrial-800\">\n                        {article.title}\n                      </CardTitle>\n                      <CardDescription className=\"text-primary pt-1 font-medium\">\n                        {article.date}\n                      </CardDescription>\n                    </CardHeader>\n                    <CardContent className=\"flex-grow\">\n                      <p className=\"text-sm text-industrial-600\">{article.summary}</p>\n                    </CardContent>\n                    <div className=\"p-6 pt-0\">\n                      <div className=\"flex flex-wrap gap-2\">\n                        {article.tags.map((tag) => (\n                          <Badge key={tag} variant=\"outline\">\n                            {tag}\n                          </Badge>\n                        ))}\n                      </div>\n                    </div>\n                  </Card>\n                ))}\n              </div>\n            </div>\n          </section>\n\n          {/* Call to Action */}\n          <section className=\"py-20 bg-industrial-50\">\n            <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n              <h2 className=\"text-3xl font-bold text-industrial-900 mb-6\">\n                Ready to Discuss Your Project?\n              </h2>\n              <p className=\"text-lg text-industrial-600 mb-8\">\n                Our team of experts is ready to answer your questions and help you find the perfect\n                environmental solution for your needs. Let's build a sustainable future together.\n              </p>\n              <Button size=\"lg\" asChild>\n                <Link href=\"/contact\">Contact Us</Link>\n              </Button>\n            </div>\n          </section>\n        </main>\n        <Footer />\n        <ChatbotWidget />\n      </div>\n    </>\n  );\n};\n\nexport default NewsPage;\n","size_bytes":5019},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\nimport { motion } from \"framer-motion\";\nimport dlsLogo from \"@assets/DLS-Full-Logo_1757759427273.png\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50 px-4\">\n      <motion.div\n        initial={{ opacity: 0, scale: 0.9 }}\n        animate={{ opacity: 1, scale: 1 }}\n        transition={{ duration: 0.5 }}\n      >\n        <Card className=\"w-full max-w-md\">\n          <CardContent className=\"pt-6\">\n            <div className=\"flex flex-col items-center gap-4\">\n              <img src={dlsLogo} alt=\"DLS Envirotech\" className=\"h-12\" />\n              <div className=\"flex items-center gap-2\">\n                <AlertCircle className=\"h-8 w-8 text-red-500\" />\n                <h1 className=\"text-2xl font-bold text-gray-900\">\n                  404 - Page Not Found\n                </h1>\n              </div>\n            </div>\n\n            <p className=\"mt-4 text-sm text-gray-600 text-center\">\n              Sorry, we couldn’t find the page you were looking for. It may have\n              been moved, deleted, or never existed.\n            </p>\n\n            <div className=\"mt-6 flex flex-col justify-center sm:flex-row gap-2\">\n              <a\n                href=\"/\"\n                className=\"inline-block w-full sm:w-auto px-4 py-2 text-sm font-medium text-white bg-blue-600 rounded-md hover:bg-blue-700 text-center\"\n              >\n                Go to Homepage\n              </a>\n              <a\n                href=\"/services\"\n                className=\"inline-block w-full sm:w-auto px-4 py-2 text-sm font-medium text-blue-600 border border-blue-600 rounded-md hover:bg-blue-50 text-center\"\n              >\n                View Our Services\n              </a>\n            </div>\n          </CardContent>\n        </Card>\n      </motion.div>\n    </div>\n  );\n}\n","size_bytes":1953},"client/src/pages/portfolio.tsx":{"content":"import { useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport Header from \"@/components/layout/header\";\nimport Footer from \"@/components/layout/footer\";\nimport PortfolioCard from \"@/components/ui/portfolio-card\";\nimport ChatbotWidget from \"@/components/chatbot/chatbot-widget\";\nimport { PORTFOLIO_PROJECTS } from \"@/lib/constants\";\nimport { Button } from \"@/components/ui/button\";\nimport { Link } from \"wouter\";\nimport { Phone } from \"lucide-react\";\n\nconst Portfolio = () => {\n  const [activeFilter, setActiveFilter] = useState(\"all\");\n  \n  const filters = [\n    { id: \"all\", label: \"All Projects\" },\n    { id: \"stp\", label: \"STP Systems\" },\n    { id: \"etp\", label: \"ETP Plants\" },\n    { id: \"industrial\", label: \"Industrial\" },\n    { id: \"municipal\", label: \"Municipal\" },\n  ];\n\n  const filteredProjects = PORTFOLIO_PROJECTS.filter(project => {\n    if (activeFilter === \"all\") return true;\n    return project.category.includes(activeFilter);\n  });\n\n  return (\n    <>\n      <Helmet>\n        <title>Project Portfolio - Water Treatment Case Studies | DLS Envirotech</title>\n        <meta name=\"description\" content=\"Explore our successful water treatment project implementations across 22 countries. Detailed case studies of STP, ETP, and industrial water treatment systems.\" />\n        <meta name=\"keywords\" content=\"water treatment projects, case studies, STP projects, ETP implementation, industrial water treatment portfolio\" />\n      </Helmet>\n      \n      <div className=\"min-h-screen bg-white\">\n        <Header />\n        <main>\n          {/* Hero Section */}\n          <section className=\"bg-gradient-to-br from-industrial-50 to-industrial-100 py-20\">\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n              <h1 className=\"text-5xl font-bold text-industrial-900 mb-6\">\n                Project Portfolio & Case Studies\n              </h1>\n              <p className=\"text-xl text-industrial-600 max-w-3xl mx-auto mb-8\">\n                Explore our successful implementations across 22 countries with detailed technical \n                specifications and performance metrics from over 2,500 completed systems.\n              </p>\n              <div className=\"grid md:grid-cols-3 gap-8 max-w-2xl mx-auto\">\n                <div className=\"text-center\">\n                  <div className=\"text-3xl font-bold text-primary mb-2\">2500+</div>\n                  <div className=\"text-industrial-600\">Systems Installed</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-3xl font-bold text-secondary mb-2\">22</div>\n                  <div className=\"text-industrial-600\">Countries Served</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-3xl font-bold text-accent mb-2\">100%</div>\n                  <div className=\"text-industrial-600\">Success Rate</div>\n                </div>\n              </div>\n            </div>\n          </section>\n\n          {/* Portfolio Filter and Grid */}\n          <section className=\"py-20 bg-white\">\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n              {/* Filter Tabs */}\n              <div className=\"flex flex-wrap justify-center gap-4 mb-12\">\n                {filters.map((filter) => (\n                  <Button\n                    key={filter.id}\n                    variant={activeFilter === filter.id ? \"default\" : \"outline\"}\n                    onClick={() => setActiveFilter(filter.id)}\n                    className=\"font-semibold\"\n                  >\n                    {filter.label}\n                  </Button>\n                ))}\n              </div>\n              \n              <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n                {filteredProjects.map((project) => (\n                  <PortfolioCard key={project.id} project={project} />\n                ))}\n              </div>\n\n              {filteredProjects.length === 0 && (\n                <div className=\"text-center py-12\">\n                  <p className=\"text-industrial-600 text-lg\">\n                    No projects found for the selected filter.\n                  </p>\n                </div>\n              )}\n            </div>\n          </section>\n\n          {/* Call to Action */}\n          <section className=\"py-20 bg-industrial-50\">\n            <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n              <h2 className=\"text-3xl font-bold text-industrial-900 mb-6\">\n                Ready to Start Your Water Treatment Project?\n              </h2>\n              <p className=\"text-lg text-industrial-600 mb-8\">\n                Join our growing list of satisfied clients with a proven track record of successful \n                water treatment implementations. Let's discuss your project requirements.\n              </p>\n              <Button size=\"lg\" asChild>\n                <Link href=\"/contact\">\n                  <Phone className=\"mr-2 h-5 w-5\" />\n                  Start Your Project\n                </Link>\n              </Button>\n            </div>\n          </section>\n        </main>\n        <Footer />\n        <ChatbotWidget />\n      </div>\n    </>\n  );\n};\n\nexport default Portfolio;\n","size_bytes":5261},"client/src/pages/quote.tsx":{"content":"\nimport { useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport Header from \"@/components/layout/header\";\nimport Footer from \"@/components/layout/footer\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport ChatbotWidget from \"@/components/chatbot/chatbot-widget\";\nimport { mockApi } from \"@/lib/mockApi\";\n\nexport default function Quote() {\n  const { toast } = useToast();\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    company: \"\",\n    service: \"\",\n    capacity: \"\",\n    location: \"\",\n    timeline: \"\",\n    description: \"\",\n  });\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    try {\n      await mockApi.createQuote(formData);\n      \n      toast({\n        title: \"Quote Request Submitted!\",\n        description: \"Thank you for your request. We'll prepare your quote and get back to you within 24 hours.\",\n      });\n      \n      setFormData({\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        company: \"\",\n        service: \"\",\n        capacity: \"\",\n        location: \"\",\n        timeline: \"\",\n        description: \"\",\n      });\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"There was a problem submitting your quote request. Please try again.\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    setFormData(prev => ({\n      ...prev,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const handleSelectChange = (name: string, value: string) => {\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Get Quote - DLS Envirotech Corporation</title>\n        <meta name=\"description\" content=\"Request a customized quote for your water treatment solution. Fast turnaround, competitive pricing.\" />\n      </Helmet>\n      \n      <Header />\n      \n      <main className=\"min-h-screen pt-20\">\n        <div className=\"container mx-auto px-4 py-12\">\n          <div className=\"max-w-4xl mx-auto\">\n            <div className=\"text-center mb-12\">\n              <h1 className=\"text-4xl font-bold mb-4\">Request a Quote</h1>\n              <p className=\"text-xl text-muted-foreground\">\n                Get a customized solution for your water treatment needs. Fill out the form below and we'll provide you with a detailed quote within 24 hours.\n              </p>\n            </div>\n\n            <Card>\n              <CardHeader>\n                <CardTitle>Project Details</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <form onSubmit={handleSubmit} className=\"space-y-6\">\n                  <div className=\"grid md:grid-cols-2 gap-4\">\n                    <Input\n                      name=\"name\"\n                      placeholder=\"Full Name *\"\n                      value={formData.name}\n                      onChange={handleChange}\n                      required\n                    />\n                    <Input\n                      name=\"email\"\n                      type=\"email\"\n                      placeholder=\"Email Address *\"\n                      value={formData.email}\n                      onChange={handleChange}\n                      required\n                    />\n                  </div>\n\n                  <div className=\"grid md:grid-cols-2 gap-4\">\n                    <Input\n                      name=\"phone\"\n                      placeholder=\"Phone Number\"\n                      value={formData.phone}\n                      onChange={handleChange}\n                    />\n                    <Input\n                      name=\"company\"\n                      placeholder=\"Company Name\"\n                      value={formData.company}\n                      onChange={handleChange}\n                    />\n                  </div>\n\n                  <div className=\"grid md:grid-cols-2 gap-4\">\n                    <Select onValueChange={(value) => handleSelectChange(\"service\", value)}>\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Service Type *\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"stp\">Sewage Treatment Plant</SelectItem>\n                        <SelectItem value=\"etp\">Effluent Treatment Plant</SelectItem>\n                        <SelectItem value=\"wtp\">Water Treatment Plant</SelectItem>\n                        <SelectItem value=\"maintenance\">Maintenance Services</SelectItem>\n                        <SelectItem value=\"consultation\">Consultation</SelectItem>\n                      </SelectContent>\n                    </Select>\n                    <Input\n                      name=\"capacity\"\n                      placeholder=\"Required Capacity (e.g., 10,000 L/day)\"\n                      value={formData.capacity}\n                      onChange={handleChange}\n                    />\n                  </div>\n\n                  <div className=\"grid md:grid-cols-2 gap-4\">\n                    <Input\n                      name=\"location\"\n                      placeholder=\"Project Location\"\n                      value={formData.location}\n                      onChange={handleChange}\n                    />\n                    <Select onValueChange={(value) => handleSelectChange(\"timeline\", value)}>\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Project Timeline\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"immediate\">Immediate (1-2 weeks)</SelectItem>\n                        <SelectItem value=\"short\">Short-term (1-3 months)</SelectItem>\n                        <SelectItem value=\"medium\">Medium-term (3-6 months)</SelectItem>\n                        <SelectItem value=\"long\">Long-term (6+ months)</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n\n                  <Textarea\n                    name=\"description\"\n                    placeholder=\"Project Description - Please provide details about your requirements, current challenges, and any specific needs...\"\n                    rows={6}\n                    value={formData.description}\n                    onChange={handleChange}\n                  />\n\n                  <Button type=\"submit\" size=\"lg\" className=\"w-full\">\n                    Request Quote\n                  </Button>\n                </form>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </main>\n\n      <Footer />\n      <ChatbotWidget />\n    </>\n  );\n}\n","size_bytes":7039},"client/src/pages/services.tsx":{"content":"import { Helmet } from \"react-helmet\";\nimport Header from \"@/components/layout/header\";\nimport Footer from \"@/components/layout/footer\";\nimport ServiceCard from \"@/components/ui/service-card\";\nimport ChatbotWidget from \"@/components/chatbot/chatbot-widget\";\nimport { SERVICES } from \"@/lib/constants\";\nimport { Button } from \"@/components/ui/button\";\nimport { Link } from \"wouter\";\nimport { Phone } from \"lucide-react\";\n\nconst Services = () => {\n  return (\n    <>\n      <Helmet>\n        <title>Water Treatment Services - STP, ETP, RO Plants | DLS Envirotech</title>\n        <meta name=\"description\" content=\"Comprehensive water treatment services including sewage treatment plants, effluent treatment plants, RO systems, and industrial cooling towers. Professional environmental solutions.\" />\n        <meta name=\"keywords\" content=\"STP, ETP, sewage treatment plant, effluent treatment plant, RO plant, cooling tower, water treatment services\" />\n      </Helmet>\n      \n      <div className=\"min-h-screen bg-white\">\n        <Header />\n        <main>\n          {/* Hero Section */}\n          <section className=\"bg-gradient-to-br from-industrial-50 to-industrial-100 py-20\">\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n              <h1 className=\"text-5xl font-bold text-industrial-900 mb-6\">\n                Professional Water Treatment Services\n              </h1>\n              <p className=\"text-xl text-industrial-600 max-w-3xl mx-auto mb-8\">\n                Comprehensive environmental technology solutions designed to meet the highest standards \n                of water treatment for industrial and municipal applications.\n              </p>\n              <Button size=\"lg\" asChild>\n                <Link href=\"/contact\">\n                  <Phone className=\"mr-2 h-5 w-5\" />\n                  Get Custom Solution\n                </Link>\n              </Button>\n            </div>\n          </section>\n\n          {/* Services Grid */}\n          <section className=\"py-20 bg-white\">\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n              <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n                {SERVICES.map((service) => (\n                  <ServiceCard key={service.id} service={service} />\n                ))}\n              </div>\n            </div>\n          </section>\n\n          {/* Call to Action */}\n          <section className=\"py-20 bg-industrial-50\">\n            <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n              <h2 className=\"text-3xl font-bold text-industrial-900 mb-6\">\n                Need a Custom Water Treatment Solution?\n              </h2>\n              <p className=\"text-lg text-industrial-600 mb-8\">\n                Our expert engineers can design and implement the perfect water treatment system \n                for your specific requirements. Contact us for a free consultation.\n              </p>\n              <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n                <Button size=\"lg\" asChild>\n                  <Link href=\"/contact\">\n                    Schedule Consultation\n                  </Link>\n                </Button>\n                <Button variant=\"outline\" size=\"lg\" asChild>\n                  <Link href=\"/portfolio\">\n                    View Case Studies\n                  </Link>\n                </Button>\n              </div>\n            </div>\n          </section>\n        </main>\n        <Footer />\n        <ChatbotWidget />\n      </div>\n    </>\n  );\n};\n\nexport default Services;\n","size_bytes":3576},"client/src/types/index.ts":{"content":"export interface ServiceType {\n  id: string;\n  title: string;\n  description: string;\n  features: string[];\n  icon: string;\n  category: string;\n}\n\nexport interface PortfolioProject {\n  id: string;\n  title: string;\n  description: string;\n  image: string;\n  category: string[];\n  tags: string[];\n  capacity: string;\n  technology: string;\n  location?: string;\n  industry?: string;\n}\n\nexport interface TestimonialType {\n  id: string;\n  name: string;\n  position: string;\n  company: string;\n  content: string;\n  rating: number;\n  project: string;\n}\n\nexport interface ContactFormData {\n  firstName: string;\n  lastName: string;\n  email: string;\n  phone: string;\n  serviceType: string;\n  capacity?: string;\n  message?: string;\n}\n\nexport interface ChatMessage {\n  id: string;\n  message: string;\n  response: string;\n  isUser: boolean;\n  timestamp: Date;\n}\n","size_bytes":844},"client/src/components/chatbot/chatbot-widget.tsx":{"content":"import { useState, useEffect, useRef } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { MessageCircle, Send, X } from \"lucide-react\";\nimport { mockApi } from \"@/lib/mockApi\";\nimport dlsLogo from \"@assets/DLS-Full-Logo_1757759427273.png\";\n\ninterface ChatMessage {\n  id: string;\n  message: string;\n  isUser: boolean;\n  timestamp: Date;\n}\n\nexport default function ChatbotWidget() {\n  // Ref to auto-scroll the chat area when new messages arrive\n  const scrollRef = useRef<HTMLDivElement>(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState<ChatMessage[]>([\n    {\n      id: \"1\",\n      message: \"Hello! I'm here to help you. How can I assist you today?\",\n      isUser: false,\n      timestamp: new Date(),\n    },\n  ]);\n  const [inputMessage, setInputMessage] = useState(\"\");\n  const [sessionId] = useState(() => `session_${Date.now()}`);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    const scroll = scrollRef.current;\n    if (scroll) {\n      setTimeout(() => {\n        scroll.scrollIntoView({ behavior: \"smooth\", block: \"end\" });\n      }, 500);\n    }\n  }, [messages, isOpen]);\n\n  const handleSendMessage = async () => {\n    if (!inputMessage.trim()) return;\n\n    const userMessage: ChatMessage = {\n      id: Date.now().toString(),\n      message: inputMessage,\n      isUser: true,\n      timestamp: new Date(),\n    };\n\n    setMessages((prev) => [...prev, userMessage]);\n    const currentMessage = inputMessage;\n    setInputMessage(\"\");\n\n    try {\n      const response = await mockApi.sendChatMessage(currentMessage, sessionId);\n\n      // Redirect after displaying message (if redirectUrl exists)\n      if (response.redirectUrl) {\n        setTimeout(() => {\n          window.location.href = response.redirectUrl!;\n        }, 1500); // delay to show bot message before redirect\n      }\n\n      const botResponse: ChatMessage = {\n        id: (Date.now() + 1).toString(),\n        message: response.response,\n        isUser: false,\n        timestamp: new Date(),\n      };\n\n      setMessages((prev) => [...prev, botResponse]);\n    } catch (error) {\n      const errorResponse: ChatMessage = {\n        id: (Date.now() + 1).toString(),\n        message:\n          \"I'm sorry, I'm having trouble responding right now. Please try again or contact us directly for assistance.\",\n        isUser: false,\n        timestamp: new Date(),\n      };\n      setMessages((prev) => [...prev, errorResponse]);\n    }\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === \"Enter\") {\n      handleSendMessage();\n    }\n  };\n\n  return (\n    <>\n      {/* Fullscreen blur overlay */}\n      {isOpen && (\n        <div\n          className=\"fixed inset-0 bg-black bg-opacity-30 backdrop-blur-sm z-40 transition-all\"\n          onClick={() => setIsOpen(false)} // Clicking the blurred background closes the chat\n        ></div>\n      )}\n      {/* Chat Button */}\n      <Button\n        // Toggle chat window open/close when chat icon is clicked\n        onClick={() => {\n          setIsOpen((prev) => !prev);\n          setTimeout(() => inputRef.current?.focus(), 300);\n        }}\n        size=\"lg\"\n        className=\"fixed bottom-6 right-6 rounded-full h-14 w-14 shadow-lg z-50\"\n      >\n        <MessageCircle className=\"h-6 w-6\" />\n      </Button>\n\n      {/* Chat Window */}\n      {isOpen && (\n        <Card className=\"fixed bottom-24 right-2 left-2 sm:right-6 sm:left-auto w-auto sm:w-80 md:w-96 max-w-full h-[70vh] max-h-[500px] shadow-xl z-50 flex flex-col transition-all duration-300 ease-in-out transform scale-95 opacity-0 animate-fade-in opacity-100 scale-100\">\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2 bg-[whitesmoke] rounded-lg\">\n            <div className=\"flex items-center gap-2\">\n              <img src={dlsLogo} alt=\"DLS Envirotech\" className=\"h-6 w-auto\" />\n              <CardTitle className=\"text-sm\">DLS Support Chat</CardTitle>\n            </div>\n            <Button variant=\"ghost\" size=\"sm\" onClick={() => setIsOpen(false)}>\n              <X className=\"h-4 w-4\" />\n            </Button>\n          </CardHeader>\n          <CardContent className=\"flex flex-col p-0 flex-grow overflow-hidden\">\n            <ScrollArea className=\"flex-grow p-4 overflow-y-auto\">\n              <div className=\"space-y-4\">\n                {messages.map((msg) => (\n                  <div\n                    key={msg.id}\n                    className={`flex ${\n                      msg.isUser ? \"justify-end\" : \"justify-start\"\n                    }`}\n                  >\n                    <div\n                      className={`max-w-[80%] p-3 rounded-lg text-sm ${\n                        msg.isUser\n                          ? \"bg-primary text-primary-foreground\"\n                          : \"bg-muted\"\n                      }`}\n                    >\n                      {msg.message}\n                    </div>\n                  </div>\n                ))}\n                <div ref={scrollRef} />\n              </div>\n            </ScrollArea>\n            <div className=\"p-4 border-t bg-white sticky bottom-0 rounded-b-lg\">\n              <div className=\"flex space-x-2\">\n                <Input\n                  ref={inputRef}\n                  value={inputMessage}\n                  onChange={(e) => setInputMessage(e.target.value)}\n                  onKeyPress={handleKeyPress}\n                  placeholder=\"Type your message...\"\n                  className=\"flex-1\"\n                />\n                <Button onClick={handleSendMessage} size=\"sm\">\n                  <Send className=\"h-4 w-4\" />\n                </Button>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n    </>\n  );\n}\n","size_bytes":5943},"client/src/components/layout/footer.tsx":{"content":"import { Link } from \"wouter\";\nimport { Linkedin, Twitter, Facebook, Youtube } from \"lucide-react\";\nimport dlsLogo from \"@assets/DLS-Full-Logo_1757760050339.png\";\n\nconst Footer = () => {\n  const services = [\n    \"Sewage Treatment Plants\",\n    \"Effluent Treatment Plants\", \n    \"RO & DM Plants\",\n    \"Cooling Tower Systems\",\n    \"Solid Waste Management\",\n    \"Turnkey Solutions\"\n  ];\n\n  const company = [\n    { name: \"About Us\", href: \"/about\" },\n    { name: \"Portfolio\", href: \"/portfolio\" },\n    { name: \"Services\", href: \"/services\" },\n    { name: \"Careers\", href: \"/career\" },\n    { name: \"Contact Us\", href: \"/contact\" }\n  ];\n\n  return (\n    <footer className=\"bg-industrial-900 dark:bg-industrial-950 text-white py-16 transition-colors\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-12\">\n          {/* Company Information */}\n          <div className=\"lg:col-span-2\">\n            <div className=\"flex items-center space-x-4 mb-6\">\n              <img \n                src={dlsLogo} \n                alt=\"DLS Envirotech Corporation Logo\" \n                className=\"h-16 w-48 md:w-56 lg:w-64 object-contain filter brightness-0 invert\"\n              />\n            </div>\n            <p className=\"text-industrial-300 dark:text-industrial-400 mb-6 leading-relaxed\">\n              Leading provider of comprehensive water treatment solutions with 15+ years of expertise in \n              environmental technology. Serving clients across 22 countries with innovative and sustainable solutions.\n            </p>\n            <div className=\"flex space-x-4\">\n              <a href=\"#\" className=\"bg-industrial-800 dark:bg-industrial-700 p-3 rounded-lg hover:bg-primary transition-colors\">\n                <Linkedin className=\"h-5 w-5\" />\n              </a>\n              <a href=\"#\" className=\"bg-industrial-800 dark:bg-industrial-700 p-3 rounded-lg hover:bg-primary transition-colors\">\n                <Twitter className=\"h-5 w-5\" />\n              </a>\n              <a href=\"#\" className=\"bg-industrial-800 dark:bg-industrial-700 p-3 rounded-lg hover:bg-primary transition-colors\">\n                <Facebook className=\"h-5 w-5\" />\n              </a>\n              <a href=\"#\" className=\"bg-industrial-800 dark:bg-industrial-700 p-3 rounded-lg hover:bg-primary transition-colors\">\n                <Youtube className=\"h-5 w-5\" />\n              </a>\n            </div>\n          </div>\n          \n          {/* Services Links */}\n          <div>\n            <h4 className=\"text-xl font-bold mb-6\">Our Services</h4>\n            <ul className=\"space-y-3\">\n              {services.map((service) => (\n                <li key={service}>\n                  <Link \n                    href=\"/services\" \n                    className=\"text-industrial-300 dark:text-industrial-400 hover:text-white transition-colors\"\n                  >\n                    {service}\n                  </Link>\n                </li>\n              ))}\n            </ul>\n          </div>\n          \n          {/* Quick Links */}\n          <div>\n            <h4 className=\"text-xl font-bold mb-6\">Company</h4>\n            <ul className=\"space-y-3\">\n              {company.map((item) => (\n                <li key={item.name}>\n                  <Link \n                    href={item.href} \n                    className=\"text-industrial-300 dark:text-industrial-400 hover:text-white transition-colors\"\n                  >\n                    {item.name}\n                  </Link>\n                </li>\n              ))}\n              <li>\n                <a href=\"#\" className=\"text-industrial-300 dark:text-industrial-400 hover:text-white transition-colors\">\n                  Quality Policy\n                </a>\n              </li>\n              <li>\n                <a href=\"#\" className=\"text-industrial-300 dark:text-industrial-400 hover:text-white transition-colors\">\n                  Certifications\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n        \n        <div className=\"border-t border-industrial-800 dark:border-industrial-700 mt-12 pt-8\">\n          <div className=\"flex flex-col md:flex-row justify-between items-center\">\n            <p className=\"text-industrial-400 dark:text-industrial-500 text-sm\">\n              © 2024 DLS Envirotech Corporation. All rights reserved.\n            </p>\n            <div className=\"flex space-x-6 mt-4 md:mt-0\">\n              <Link href=\"/sitemap\" className=\"text-industrial-400 dark:text-industrial-500 hover:text-white text-sm transition-colors\">\n                Sitemap\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","size_bytes":4748},"client/src/components/layout/header.tsx":{"content":"import { useState } from \"react\";\nimport { Link, useLocation } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Sheet, SheetContent, SheetTrigger } from \"@/components/ui/sheet\";\nimport { ThemeToggle } from \"@/components/ui/theme-toggle\";\nimport { Menu } from \"lucide-react\";\nimport dlsLogo from \"@assets/DLS-Full-Logo_1757760050339.png\";\n\nconst Header = () => {\n  const [location] = useLocation();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const navigation = [\n    { name: \"About Us\", href: \"/about\" },\n    { name: \"Services\", href: \"/services\" },\n    { name: \"Projects\", href: \"/portfolio\" },\n    { name: \"Gallery\", href: \"/gallery\" },\n    { name: \"Careers\", href: \"/career\" },\n    { name: \"Contact Us\", href: \"/contact\" },\n    { name: \"News & Updates\", href: \"/news\" },\n  ];\n\n  const isActive = (href: string) => {\n    if (href === \"/\" && location === \"/\") return true;\n    if (href !== \"/\" && location.startsWith(href)) return true;\n    return false;\n  };\n\n  return (\n    <header className=\"bg-white dark:bg-industrial-900 shadow-lg sticky top-0 z-50 transition-colors\" role=\"banner\">\n      <nav className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\" aria-label=\"Main navigation\">\n        <div className=\"flex justify-between items-center h-20\">\n          <Link href=\"/\" className=\"flex items-center space-x-4\">\n            <img \n              src={dlsLogo} \n              alt=\"DLS Envirotech Corporation Logo\" \n              className=\"h-12 md:h-14 lg:h-16 xl:h-[72px] w-32 md:w-40 lg:w-48 xl:w-56 object-contain dark:filter dark:brightness-0 dark:invert\"\n            />\n          </Link>\n          \n          <div className=\"hidden md:flex items-center space-x-8\">\n            {navigation.map((item) => (\n              <Link\n                key={item.name}\n                href={item.href}\n                className={`font-medium transition-colors relative ${\n                  isActive(item.href)\n                    ? \"text-primary font-semibold\"\n                    : \"text-industrial-700 dark:text-industrial-300 hover:text-primary dark:hover:text-primary\"\n                }`}\n              >\n                {item.name}\n                {isActive(item.href) && (\n                  <span className=\"absolute -bottom-1 left-0 right-0 h-0.5 bg-primary rounded-full\"></span>\n                )}\n              </Link>\n            ))}\n            <div className=\"flex items-center space-x-4\">\n              <ThemeToggle />\n              <Button asChild>\n                <Link href=\"/quote\">Get Quote</Link>\n              </Button>\n            </div>\n          </div>\n          \n          <div className=\"flex items-center space-x-2 md:hidden\">\n            <ThemeToggle />\n            <Sheet open={isOpen} onOpenChange={setIsOpen}>\n              <SheetTrigger asChild>\n                <Button variant=\"ghost\" size=\"icon\">\n                  <Menu className=\"h-6 w-6\" />\n                  <span className=\"sr-only\">Toggle mobile menu</span>\n                </Button>\n              </SheetTrigger>\n              <SheetContent side=\"right\" className=\"w-[300px] sm:w-[400px]\">\n                <div className=\"flex flex-col space-y-4 mt-8\">\n                  {navigation.map((item) => (\n                    <Link\n                      key={item.name}\n                      href={item.href}\n                      className={`text-lg font-medium transition-colors relative ${\n                        isActive(item.href)\n                          ? \"text-primary font-semibold bg-primary/10 px-3 py-2 rounded-md\"\n                          : \"text-industrial-700 dark:text-industrial-300 hover:text-primary px-3 py-2 hover:bg-industrial-50 dark:hover:bg-industrial-800 rounded-md\"\n                      }`}\n                      onClick={() => setIsOpen(false)}\n                    >\n                      {item.name}\n                    </Link>\n                  ))}\n                  <Button asChild className=\"mt-4\">\n                    <Link href=\"/quote\" onClick={() => setIsOpen(false)}>\n                      Get Quote\n                    </Link>\n                  </Button>\n                </div>\n              </SheetContent>\n            </Sheet>\n          </div>\n        </div>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","size_bytes":4266},"client/src/components/sections/about-section.tsx":{"content":"import { CheckCircle } from \"lucide-react\";\n\nconst AboutSection = () => {\n  const stats = [\n    { value: \"2500+\", label: \"Systems Installed\" },\n    { value: \"22\", label: \"Countries Served\" },\n    { value: \"10+\", label: \"Years Experience\" },\n    { value: \"100+\", label: \"Team Members\" },\n  ];\n\n  const features = [\n    \"ISO 9001:2015 Certified Quality Management\",\n    \"Complete In-house R&D and Design Capabilities\",\n    \"24/7 Technical Support and Maintenance\",\n    \"Comprehensive Warranty and Service Programs\",\n  ];\n\n  return (\n    <section className=\"py-20 bg-white\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"grid lg:grid-cols-2 gap-16 items-center\">\n          <div>\n            <div className=\"mb-8\">\n              <h2 className=\"text-4xl font-bold text-industrial-900 mb-6\">\n                10+ Years of Environmental Engineering Excellence\n              </h2>\n              <p className=\"text-xl text-industrial-600 leading-relaxed mb-6\">\n                DLS Envirotech Corporation has established itself as a trusted leader in water treatment technology, \n                delivering innovative solutions that protect the environment while ensuring regulatory compliance.\n              </p>\n              <p className=\"text-lg text-industrial-600 leading-relaxed\">\n                Our comprehensive approach combines cutting-edge technology with proven methodologies to create \n                sustainable water treatment solutions that meet the evolving needs of industries and municipalities worldwide.\n              </p>\n            </div>\n            \n            <div className=\"grid sm:grid-cols-2 gap-6 mb-8\">\n              {stats.map((stat) => (\n                <div key={stat.label} className=\"bg-industrial-50 p-6 rounded-xl\">\n                  <div className=\"text-3xl font-bold text-primary mb-2\">{stat.value}</div>\n                  <div className=\"text-industrial-700 font-semibold\">{stat.label}</div>\n                </div>\n              ))}\n            </div>\n            \n            <div className=\"space-y-4\">\n              {features.map((feature) => (\n                <div key={feature} className=\"flex items-center\">\n                  <CheckCircle className=\"h-5 w-5 text-secondary mr-4 flex-shrink-0\" />\n                  <span className=\"text-industrial-700 font-semibold\">{feature}</span>\n                </div>\n              ))}\n            </div>\n          </div>\n          \n          <div className=\"relative\">\n            <img \n              src=\"https://images.unsplash.com/photo-1581094794329-c8112a89af12?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1000&q=80\"\n              alt=\"Professional engineering team discussing water treatment project plans\" \n              className=\"rounded-2xl shadow-2xl w-full h-auto\" \n            />\n            \n            <div className=\"absolute -bottom-8 -right-8 bg-primary text-white p-8 rounded-2xl shadow-xl\">\n              <div className=\"text-center\">\n                <div className=\"text-4xl font-bold mb-2\">10+</div>\n                <div className=\"text-lg font-semibold\">Years</div>\n                <div className=\"text-sm opacity-90\">Experience</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default AboutSection;\n","size_bytes":3371},"client/src/components/sections/contact-section.tsx":{"content":"import { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Mail, Phone, MapPin } from \"lucide-react\";\nimport { mockApi } from \"@/lib/mockApi\";\n\nexport default function ContactSection() {\n  const { toast } = useToast();\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    company: \"\",\n    message: \"\",\n  });\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    try {\n      await mockApi.createConsultation(formData);\n\n      toast({\n        title: \"Message Sent!\",\n        description: \"Thank you for your interest. We'll get back to you soon.\",\n      });\n\n      setFormData({ name: \"\", email: \"\", company: \"\", message: \"\" });\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"There was a problem submitting your message. Please try again.\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    setFormData(prev => ({\n      ...prev,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  return (\n    <section className=\"py-16 bg-muted/50\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl font-bold mb-4\">Get In Touch</h2>\n          <p className=\"text-muted-foreground max-w-2xl mx-auto\">\n            Ready to discuss your water treatment needs? Contact us today for a consultation.\n          </p>\n        </div>\n\n        <div className=\"grid md:grid-cols-2 gap-8 max-w-6xl mx-auto\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Send us a Message</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <form onSubmit={handleSubmit} className=\"space-y-4\">\n                <Input\n                  name=\"name\"\n                  placeholder=\"Your Name\"\n                  value={formData.name}\n                  onChange={handleChange}\n                  required\n                />\n                <Input\n                  name=\"email\"\n                  type=\"email\"\n                  placeholder=\"Your Email\"\n                  value={formData.email}\n                  onChange={handleChange}\n                  required\n                />\n                <Input\n                  name=\"company\"\n                  placeholder=\"Company Name\"\n                  value={formData.company}\n                  onChange={handleChange}\n                />\n                <Textarea\n                  name=\"message\"\n                  placeholder=\"Tell us about your project\"\n                  rows={4}\n                  value={formData.message}\n                  onChange={handleChange}\n                  required\n                />\n                <Button type=\"submit\" className=\"w-full\">\n                  Send Message\n                </Button>\n              </form>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader>\n              <CardTitle>Contact Information</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-6\">\n              <div className=\"flex items-center space-x-3\">\n                <Phone className=\"h-5 w-5 text-primary\" />\n                <div>\n                  <p className=\"font-medium\">Phone</p>\n                  <p className=\"text-muted-foreground\">+1 (555) 123-4567</p>\n                </div>\n              </div>\n              <div className=\"flex items-center space-x-3\">\n                <Mail className=\"h-5 w-5 text-primary\" />\n                <div>\n                  <p className=\"font-medium\">Email</p>\n                  <p className=\"text-muted-foreground\">contact@dlsenvirotech.com</p>\n                </div>\n              </div>\n              <div className=\"flex items-center space-x-3\">\n                <MapPin className=\"h-5 w-5 text-primary\" />\n                <div>\n                  <p className=\"font-medium\">Address</p>\n                  <p className=\"text-muted-foreground\">\n                    123 Industrial Way<br />\n                    Water City, WC 12345\n                  </p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":4481},"client/src/components/sections/hero-section.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Link } from \"wouter\";\nimport { Phone, Play, Award, TrendingUp } from \"lucide-react\";\n\nconst HeroSection = () => {\n  return (\n    <section className=\"relative min-h-screen flex items-center bg-gradient-to-br from-industrial-50 to-industrial-100\">\n      {/* Background Image */}\n      <div\n        className=\"absolute inset-0 bg-cover bg-center opacity-10\"\n        style={{\n          backgroundImage:\n            \"url('https://www.venwiz.com/wp-content/uploads/2024/05/Understanding-the-Different-Types-of-Sewage-Treatment-Plant-Part-1.jpg')\",\n        }}\n        aria-hidden=\"true\"\n      />\n\n      <div className=\"relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 grid lg:grid-cols-2 gap-12 items-center\">\n        <div className=\"text-center lg:text-left\">\n          <Badge className=\"mb-6\" variant=\"secondary\">\n            <Award className=\"mr-2 h-4 w-4\" />\n            15+ Years Experience\n          </Badge>\n\n          <h1 className=\"text-5xl lg:text-6xl font-bold text-industrial-900 mb-6 leading-tight\">\n            Advanced Water Treatment\n            <span className=\"text-primary block\">Solutions</span>\n          </h1>\n\n          <p className=\"text-xl text-industrial-600 mb-8 leading-relaxed\">\n            Leading provider of comprehensive wastewater treatment services,\n            specializing in effluent treatment plants, sewage treatment systems,\n            and environmental technology solutions for industrial and municipal\n            applications.\n          </p>\n\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center lg:justify-start\">\n            <Button size=\"lg\" asChild>\n              <Link href=\"/contact\">\n                <Phone className=\"mr-2 h-5 w-5\" />\n                Get Free Consultation\n              </Link>\n            </Button>\n            <Button variant=\"outline\" size=\"lg\" asChild>\n              <Link href=\"/portfolio\">\n                <Play className=\"mr-2 h-5 w-5\" />\n                View Our Work\n              </Link>\n            </Button>\n          </div>\n        </div>\n\n        <div className=\"relative\">\n          <img\n            src=\"https://alantech.in/storage/blogs/modern-sewage-treatment-plant.webp\"\n            alt=\"Modern sewage treatment plant facility with advanced filtration systems\"\n            className=\"rounded-2xl shadow-2xl w-full h-auto\"\n          />\n\n          <div className=\"absolute -bottom-6 -left-6 bg-white p-6 rounded-xl shadow-lg\">\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"bg-secondary text-white p-3 rounded-lg\">\n                <TrendingUp className=\"h-6 w-6\" />\n              </div>\n              <div>\n                <p className=\"text-2xl font-bold text-industrial-900\">2500+</p>\n                <p className=\"text-industrial-600\">Systems Installed</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default HeroSection;\n","size_bytes":3041},"client/src/components/sections/portfolio-showcase.tsx":{"content":"import { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport PortfolioCard from \"@/components/ui/portfolio-card\";\nimport { PORTFOLIO_PROJECTS } from \"@/lib/constants\";\nimport { Link } from \"wouter\";\nimport { FolderOpen } from \"lucide-react\";\n\nconst PortfolioShowcase = () => {\n  const [activeFilter, setActiveFilter] = useState(\"all\");\n  \n  const filters = [\n    { id: \"all\", label: \"All Projects\" },\n    { id: \"stp\", label: \"STP Systems\" },\n    { id: \"etp\", label: \"ETP Plants\" },\n    { id: \"wtp\", label: \"WTP Systems\" },\n    { id: \"fstp\", label: \"FSTP Systems\" },\n    { id: \"mrf\", label: \"MRF Systems\" },\n    { id: \"ats\", label: \"Air Tower Systems\" },\n    { id: \"psa\", label: \"PSA Oxygen Generator\" },\n    { id: \"wwtp\", label: \"Wastewater Treatment Plants\" },\n    { id: \"iwf\", label: \"Industrial Water Filtration\" },\n    { id: \"wsp\", label: \"Water Softening Plant\" },\n  ];\n\n  const filteredProjects = PORTFOLIO_PROJECTS.filter(project => {\n    if (activeFilter === \"all\") return true;\n    return project.category.includes(activeFilter);\n  });\n\n  return (\n    <section className=\"py-20 bg-industrial-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-4xl font-bold text-industrial-900 mb-4\">\n            Project Portfolio & Case Studies\n          </h2>\n          <p className=\"text-xl text-industrial-600 max-w-3xl mx-auto\">\n            Explore our successful implementations across 22 countries with detailed technical specifications and performance metrics\n          </p>\n        </div>\n        \n        {/* Filter Tabs */}\n        <div className=\"flex flex-wrap justify-center gap-4 mb-12\">\n          {filters.map((filter) => (\n            <Button\n              key={filter.id}\n              variant={activeFilter === filter.id ? \"default\" : \"outline\"}\n              onClick={() => setActiveFilter(filter.id)}\n              className=\"font-semibold\"\n            >\n              {filter.label}\n            </Button>\n          ))}\n        </div>\n        \n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {filteredProjects.map((project) => (\n            <PortfolioCard key={project.id} project={project} />\n          ))}\n        </div>\n        \n        <div className=\"text-center mt-12\">\n          <Button size=\"lg\" asChild>\n            <Link href=\"/portfolio\">\n              <FolderOpen className=\"mr-2 h-5 w-5\" />\n              View Complete Portfolio\n            </Link>\n          </Button>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default PortfolioShowcase;\n","size_bytes":2630},"client/src/components/sections/services-overview.tsx":{"content":"import ServiceCard from \"@/components/ui/service-card\";\nimport { SERVICES } from \"@/lib/constants\";\n\nconst ServicesOverview = () => {\n  return (\n    <section className=\"py-20 bg-white\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-4xl font-bold text-industrial-900 mb-4\">\n            Our Specialized Services\n          </h2>\n          <p className=\"text-xl text-industrial-600 max-w-3xl mx-auto\">\n            Comprehensive environmental technology solutions tailored for industrial and municipal water treatment needs\n          </p>\n        </div>\n        \n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {SERVICES.map((service) => (\n            <ServiceCard key={service.id} service={service} />\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default ServicesOverview;\n","size_bytes":917},"client/src/components/sections/testimonials-section.tsx":{"content":"import TestimonialCard from \"@/components/ui/testimonial-card\";\nimport { TESTIMONIALS } from \"@/lib/constants\";\n\nconst TestimonialsSection = () => {\n  return (\n    <section className=\"py-20 bg-industrial-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-4xl font-bold text-industrial-900 mb-4\">\n            Client Success Stories\n          </h2>\n          <p className=\"text-xl text-industrial-600 max-w-3xl mx-auto\">\n            Hear from industry leaders who trust DLS Envirotech for their critical water treatment infrastructure\n          </p>\n        </div>\n        \n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {TESTIMONIALS.map((testimonial) => (\n            <TestimonialCard key={testimonial.id} testimonial={testimonial} />\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default TestimonialsSection;\n","size_bytes":958},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/portfolio-card.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { PortfolioProject } from \"@/types\";\n\ninterface PortfolioCardProps {\n  project: PortfolioProject;\n}\n\nconst PortfolioCard = ({ project }: PortfolioCardProps) => {\n  return (\n    <Card className=\"overflow-hidden shadow-lg hover:shadow-xl transition-shadow duration-300\">\n      <div className=\"relative\">\n        <img \n          src={project.image} \n          alt={project.title}\n          className=\"w-full h-48 object-cover\"\n        />\n      </div>\n      \n      <CardContent className=\"p-6\">\n        <div className=\"flex items-center gap-2 mb-3\">\n          {project.tags.map((tag) => (\n            <Badge \n              key={tag}\n              variant={tag === \"STP\" ? \"default\" : tag === \"ETP\" ? \"secondary\" : \"outline\"}\n            >\n              {tag}\n            </Badge>\n          ))}\n        </div>\n        \n        <h3 className=\"text-xl font-bold text-industrial-900 mb-3\">\n          {project.title}\n        </h3>\n        \n        <p className=\"text-industrial-600 mb-4 leading-relaxed\">\n          {project.description}\n        </p>\n        \n        <div className=\"space-y-2 mb-4\">\n          <div className=\"flex justify-between\">\n            <span className=\"text-industrial-600\">Capacity:</span>\n            <span className=\"font-semibold\">{project.capacity}</span>\n          </div>\n          <div className=\"flex justify-between\">\n            <span className=\"text-industrial-600\">Technology:</span>\n            <span className=\"font-semibold\">{project.technology}</span>\n          </div>\n          {project.location && (\n            <div className=\"flex justify-between\">\n              <span className=\"text-industrial-600\">Location:</span>\n              <span className=\"font-semibold\">{project.location}</span>\n            </div>\n          )}\n          {project.industry && (\n            <div className=\"flex justify-between\">\n              <span className=\"text-industrial-600\">Industry:</span>\n              <span className=\"font-semibold\">{project.industry}</span>\n            </div>\n          )}\n        </div>\n        \n        <Button className=\"w-full\">\n          View Detailed Case Study\n        </Button>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default PortfolioCard;\n","size_bytes":2361},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/service-card.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { ServiceType } from \"@/types\";\nimport { Link } from \"wouter\";\nimport { \n  Droplets, \n  Building2, \n  Recycle, \n  Gauge, \n  Thermometer, \n  Settings,\n  ArrowRight,\n  Check\n} from \"lucide-react\";\n\ninterface ServiceCardProps {\n  service: ServiceType;\n}\n\nconst iconMap = {\n  Droplets,\n  Building2,\n  Recycle,\n  Gauge,\n  Thermometer,\n  Settings,\n};\n\nconst ServiceCard = ({ service }: ServiceCardProps) => {\n  const IconComponent = iconMap[service.icon as keyof typeof iconMap] || Settings;\n\n  return (\n    <Card className=\"group bg-industrial-50 hover:shadow-xl transition-all duration-300 hover:-translate-y-2\">\n      <CardContent className=\"p-8\">\n        <div className=\"bg-primary text-white p-4 rounded-xl w-16 h-16 flex items-center justify-center mb-6 group-hover:scale-110 transition-transform\">\n          <IconComponent className=\"h-8 w-8\" />\n        </div>\n        \n        <h3 className=\"text-2xl font-bold text-industrial-900 mb-4\">\n          {service.title}\n        </h3>\n        \n        <p className=\"text-industrial-600 mb-6 leading-relaxed\">\n          {service.description}\n        </p>\n        \n        <ul className=\"text-industrial-600 space-y-2 mb-6\">\n          {service.features.map((feature) => (\n            <li key={feature} className=\"flex items-center\">\n              <Check className=\"h-4 w-4 text-secondary mr-2 flex-shrink-0\" />\n              <span>{feature}</span>\n            </li>\n          ))}\n        </ul>\n        \n        <Button variant=\"link\" asChild className=\"p-0 text-primary font-semibold\">\n          <Link href=\"/services\">\n            Learn More <ArrowRight className=\"ml-2 h-4 w-4\" />\n          </Link>\n        </Button>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default ServiceCard;\n","size_bytes":1846},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/testimonial-card.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { TestimonialType } from \"@/types\";\nimport { Star } from \"lucide-react\";\n\ninterface TestimonialCardProps {\n  testimonial: TestimonialType;\n}\n\nconst TestimonialCard = ({ testimonial }: TestimonialCardProps) => {\n  return (\n    <Card className=\"shadow-lg hover:shadow-xl transition-shadow duration-300\">\n      <CardContent className=\"p-8\">\n        <div className=\"flex items-center mb-6\">\n          <div className=\"w-16 h-16 bg-primary rounded-full flex items-center justify-center text-white text-xl font-bold\">\n            {testimonial.name.split(\" \").map(n => n[0]).join(\"\")}\n          </div>\n          <div className=\"ml-4\">\n            <h4 className=\"font-bold text-industrial-900\">{testimonial.name}</h4>\n            <p className=\"text-industrial-600\">{testimonial.position}, {testimonial.company}</p>\n          </div>\n        </div>\n        \n        <div className=\"flex text-yellow-400 mb-4\">\n          {Array.from({ length: testimonial.rating }).map((_, i) => (\n            <Star key={i} className=\"h-4 w-4 fill-current\" />\n          ))}\n        </div>\n        \n        <p className=\"text-industrial-600 italic mb-4 leading-relaxed\">\n          \"{testimonial.content}\"\n        </p>\n        \n        <div className=\"text-primary font-semibold\">\n          {testimonial.project}\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default TestimonialCard;\n","size_bytes":1436},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/timeline.tsx":{"content":"import React, { useEffect, useRef } from \"react\";\nimport { gsap } from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\nimport { cn } from \"@/lib/utils\";\n\ngsap.registerPlugin(ScrollTrigger);\n\ninterface Milestone {\n  year: string;\n  title: string;\n  description: string;\n}\n\ninterface ResponsiveTimelineProps {\n  milestones: Milestone[];\n}\n\nconst Timeline: React.FC<ResponsiveTimelineProps> = ({\n  milestones,\n}) => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const maskRef = useRef<SVGRectElement>(null);\n\n  useEffect(() => {\n    if (!containerRef.current || !maskRef.current) return;\n\n    const container = containerRef.current;\n    const sections = gsap.utils.toArray<HTMLElement>(\".container section\");\n    const texts = gsap.utils.toArray<HTMLElement>(\".anim\");\n    const mask = maskRef.current;\n\n    const scrollTween = gsap.to(sections, {\n      xPercent: -100 * (sections.length - 1),\n      ease: \"none\",\n      scrollTrigger: {\n        trigger: container,\n        pin: true,\n        scrub: 1,\n        end: () => `+=${container.offsetWidth * (sections.length - 1)}`,\n        snap: 1 / (sections.length - 1),\n        // markers: true,\n      },\n    });\n\n    // Progress bar animation\n    gsap.to(mask, {\n      width: \"100%\",\n      scrollTrigger: {\n        trigger: container.parentElement,\n        start: \"top left\",\n        scrub: 1,\n      },\n    });\n\n    // Animate texts\n    sections.forEach((section: HTMLElement) => {\n      const text = section.querySelectorAll<HTMLElement>(\".anim\");\n      if (text.length === 0) return;\n\n      gsap.from(text, {\n        y: -130,\n        opacity: 0,\n        duration: 2,\n        ease: \"elastic\",\n        stagger: 0.1,\n        scrollTrigger: {\n          trigger: section,\n          containerAnimation: scrollTween,\n          start: \"left center\",\n          // markers: true,\n        },\n      });\n    });\n\n    return () => {\n      ScrollTrigger.getAll().forEach((st: ScrollTrigger) => st.kill());\n      scrollTween.kill();\n    };\n  }, []);\n\n  return (\n    <div className=\"wrapper overflow-x-hidden relative\">\n      <div\n        className=\"container scrollx flex\"\n        style={{ width: `${milestones.length * 100}vw` }}\n        ref={containerRef}\n      >\n        <svg\n          viewBox=\"0 0 900 10\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\"absolute\"\n          style={{ top: \"12em\", left: \"10vw\", width: \"50vw\" }}\n        >\n          <path\n            d=\"M9.89998 6C9.43671 8.28224 7.41896 10 5 10C2.23858 10 0 7.76142 0 5C0 2.23858 2.23858 0 5 0C7.41896 0 9.43671 1.71776 9.89998 4H150C150.563 1.71776 152.581 0 155 0C157.419 0 159.437 1.71776 159.9 4H300C300.563 1.71776 302.581 0 305 0C307.419 0 309.437 1.71776 309.9 4H445.1C445.563 1.71776 447.581 0 450 0C452.419 0 454.437 1.71776 454.9 4H590C590.563 1.71776 592.581 0 595 0C597.419 0 599.437 1.71776 599.9 4H730C730.563 1.71776 732.581 0 735 0C737.419 0 739.437 1.71776 739.9 4H890.1C890.563 1.71776 892.581 0 895 0C897.761 0 900 2.23858 900 5C900 7.76142 897.761 10 895 10C892.581 10 890.563 8.28224 890.1 6H739.9C739.437 8.28224 737.419 10 735 10C732.581 10 730.563 8.28224 730 6H599.9C599.437 8.28224 597.419 10 595 10C592.581 10 590.563 8.28224 590 6H454.9C454.437 8.28224 452.419 10 450 10C447.581 10 445.563 8.28224 445.1 6H309.9C309.437 8.28224 307.419 10 305 10C302.581 10 300.563 8.28224 300 6H159.9C159.437 8.28224 157.419 10 155 10C152.581 10 150.563 8.28224 150 6H9.89998Z\"\n            fill=\"var(--industrial-300)\"\n          />\n          <mask\n            id=\"mask0_0_1\"\n            style={{ maskType: \"alpha\" }}\n            maskUnits=\"userSpaceOnUse\"\n            x={0}\n            y={0}\n            width={900}\n            height={10}\n          >\n            <path\n              d=\"M9.89998 6C9.43671 8.28224 7.41896 10 5 10C2.23858 10 0 7.76142 0 5C0 2.23858 2.23858 0 5 0C7.41896 0 9.43671 1.71776 9.89998 4H150C150.563 1.71776 152.581 0 155 0C157.419 0 159.437 1.71776 159.9 4H300C300.563 1.71776 302.581 0 305 0C307.419 0 309.437 1.71776 309.9 4H445.1C445.563 1.71776 447.581 0 450 0C452.419 0 454.437 1.71776 454.9 4H590C590.563 1.71776 592.581 0 595 0C597.419 0 599.437 1.71776 599.9 4H730C730.563 1.71776 732.581 0 735 0C737.419 0 739.437 1.71776 739.9 4H890.1C890.563 1.71776 892.581 0 895 0C897.761 0 900 2.23858 900 5C900 7.76142 897.761 10 895 10C892.581 10 890.563 8.28224 890.1 6H739.9C739.437 8.28224 737.419 10 735 10C732.581 10 730.563 8.28224 730 6H599.9C599.437 8.28224 597.419 10 595 10C592.581 10 590.563 8.28224 590 6H454.9C454.437 8.28224 452.419 10 450 10C447.581 10 445.563 8.28224 445.1 6H309.9C309.437 8.28224 307.419 10 305 10C302.581 10 300.563 8.28224 300 6H159.9C159.437 8.28224 157.419 10 155 10C152.581 10 150.563 8.28224 150 6H9.89998Z\"\n              fill=\"#D9D9D9\"\n            />\n          </mask>\n          <g mask=\"url(#mask0_0_1)\">\n            <rect\n              className=\"mask\"\n              y={-49}\n              height={99}\n              fill=\"var(--primary)\"\n              ref={maskRef}\n              style={{ width: 0 }}\n            />\n          </g>\n        </svg>\n\n        {milestones.map((milestone, index) => (\n          <section\n            key={milestone.year}\n            className=\"pin w-[100vw] p-[20vw_10vw] h-screen flex-shrink-0\"\n          >\n            <span\n              className={cn(\n                \"text-2xl font-bold text-primary dark:text-secondary\",\n                { anim: index > 0 }\n              )}\n            >\n              {milestone.year}\n            </span>\n            <h1\n              className={cn(\n                \"text-6xl font-bold font-playfair-display text-industrial-900 dark:text-primary-foreground\",\n                { anim: index > 0 }\n              )}\n            >\n              {milestone.title}\n            </h1>\n\n            <div\n              className={cn(\n                \"col flex gap-12 text-industrial-600 dark:text-industrial-400\",\n                { anim: index > 0 }\n              )}\n            >\n              <p className=\"text-sm max-w-[50vw] mt-4\">\n                {milestone.description}\n              </p>\n            </div>\n          </section>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Timeline;\n","size_bytes":6204},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"client/src/pages/sitemap.tsx":{"content":"import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Link } from \"wouter\";\nimport { \n  Home, \n  Building2, \n  Briefcase, \n  Image, \n  Users, \n  Mail, \n  FileText, \n  Newspaper \n} from \"lucide-react\";\nimport Header from \"@/components/layout/header\";\nimport Footer from \"@/components/layout/footer\";\n\nconst Sitemap = () => {\n  const sitePages = [\n    {\n      title: \"Home\",\n      href: \"/\",\n      icon: Home,\n      description: \"Company overview and featured services\"\n    },\n    {\n      title: \"About Us\", \n      href: \"/about\",\n      icon: Users,\n      description: \"Our company history, mission, and team\"\n    },\n    {\n      title: \"Services\",\n      href: \"/services\", \n      icon: Building2,\n      description: \"Water treatment solutions and environmental services\"\n    },\n    {\n      title: \"Projects\",\n      href: \"/portfolio\",\n      icon: Briefcase,\n      description: \"Portfolio of completed projects and case studies\"\n    },\n    {\n      title: \"Gallery\",\n      href: \"/gallery\",\n      icon: Image,\n      description: \"Photo gallery of our projects and facilities\"\n    },\n    {\n      title: \"Contact Us\",\n      href: \"/contact\",\n      icon: Mail,\n      description: \"Contact information and inquiry form\"\n    },\n    {\n      title: \"Get Quote\",\n      href: \"/quote\",\n      icon: FileText,\n      description: \"Request a quote for your project requirements\"\n    },\n    {\n      title: \"News & Updates\",\n      href: \"/news\",\n      icon: Newspaper,\n      description: \"Latest company news and industry updates\"\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Header />\n      <div className=\"max-w-4xl mx-auto px-4 py-12\">\n        <div className=\"text-center mb-12\">\n          <h1 className=\"text-4xl font-bold text-industrial-900 mb-4\">\n            Website Sitemap\n          </h1>\n          <p className=\"text-lg text-industrial-600\">\n            Navigate through all sections of our website\n          </p>\n        </div>\n\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {sitePages.map((page) => {\n            const IconComponent = page.icon;\n            return (\n              <Link key={page.href} href={page.href}>\n                <Card className=\"h-full hover:shadow-lg transition-all duration-300 hover:scale-105 cursor-pointer border-2 hover:border-primary/20\">\n                  <CardHeader className=\"pb-3\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"p-2 bg-primary/10 rounded-lg\">\n                        <IconComponent className=\"h-5 w-5 text-primary\" />\n                      </div>\n                      <CardTitle className=\"text-lg font-semibold\">\n                        {page.title}\n                      </CardTitle>\n                    </div>\n                  </CardHeader>\n                  <CardContent>\n                    <p className=\"text-industrial-600 text-sm leading-relaxed\">\n                      {page.description}\n                    </p>\n                  </CardContent>\n                </Card>\n              </Link>\n            );\n          })}\n        </div>\n\n        <div className=\"mt-12 p-6 bg-white rounded-lg shadow-sm\">\n          <h2 className=\"text-2xl font-bold text-industrial-900 mb-4\">\n            Website Structure\n          </h2>\n          <div className=\"grid md:grid-cols-2 gap-8\">\n            <div>\n              <h3 className=\"text-lg font-semibold text-industrial-800 mb-3\">\n                Main Pages\n              </h3>\n              <ul className=\"space-y-2 text-industrial-600\">\n                <li>• Home - Landing page with company overview</li>\n                <li>• About Us - Company information and team</li>\n                <li>• Services - Water treatment solutions</li>\n                <li>• Projects - Portfolio and case studies</li>\n              </ul>\n            </div>\n            <div>\n              <h3 className=\"text-lg font-semibold text-industrial-800 mb-3\">\n                Additional Resources\n              </h3>\n              <ul className=\"space-y-2 text-industrial-600\">\n                <li>• Gallery - Project photos and facilities</li>\n                <li>• Contact Us - Get in touch with our team</li>\n                <li>• Get Quote - Request project estimates</li>\n                <li>• News & Updates - Company announcements</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"mt-8 text-center\">\n          <p className=\"text-industrial-500 text-sm\">\n            Need help finding something? <Link href=\"/contact\" className=\"text-primary hover:underline\">Contact us</Link> for assistance.\n          </p>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Sitemap;","size_bytes":4800},".local/state/replit/agent/progress_tracker.md":{"content":"[x] 1. Install the required packages\n[x] 2. Restart the workflow to see if the project is working\n[x] 3. Verify the project is working using the feedback tool\n[x] 4. Inform user the import is completed and they can start building, mark the import as completed using the complete_project_import tool","size_bytes":298},"client/src/pages/career.tsx":{"content":"import { Helmet } from \"react-helmet\";\nimport Header from \"@/components/layout/header\";\nimport Footer from \"@/components/layout/footer\";\nimport ChatbotWidget from \"@/components/chatbot/chatbot-widget\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { MapPin, Clock, Users, Briefcase } from \"lucide-react\";\n\nconst Career = () => {\n  const jobOpenings = [\n    {\n      id: 1,\n      title: \"Environmental Engineer\",\n      department: \"Engineering\",\n      location: \"Mumbai, India\",\n      type: \"Full-time\",\n      experience: \"3-5 years\",\n      description: \"Design and implement water treatment solutions for industrial clients. Work on sewage treatment plants and effluent treatment systems.\",\n      requirements: [\n        \"B.E./B.Tech in Environmental/Chemical Engineering\",\n        \"Experience in water treatment plant design\",\n        \"Knowledge of environmental regulations\",\n        \"AutoCAD proficiency\"\n      ]\n    },\n    {\n      id: 2,\n      title: \"Project Manager\",\n      department: \"Operations\",\n      location: \"Delhi, India\",\n      type: \"Full-time\",\n      experience: \"5-8 years\",\n      description: \"Lead turnkey water treatment projects from conception to completion. Coordinate with clients, vendors, and internal teams.\",\n      requirements: [\n        \"Engineering degree with MBA preferred\",\n        \"Project management certification (PMP)\",\n        \"Experience in water treatment industry\",\n        \"Strong leadership and communication skills\"\n      ]\n    },\n    {\n      id: 3,\n      title: \"Sales Executive\",\n      department: \"Sales & Marketing\",\n      location: \"Bangalore, India\",\n      type: \"Full-time\",\n      experience: \"2-4 years\",\n      description: \"Develop new business opportunities in water treatment sector. Build relationships with industrial clients and promote our solutions.\",\n      requirements: [\n        \"B.Tech/MBA in relevant field\",\n        \"Sales experience in industrial sector\",\n        \"Understanding of water treatment technologies\",\n        \"Excellent presentation skills\"\n      ]\n    },\n    {\n      id: 4,\n      title: \"Service Technician\",\n      department: \"Service & Maintenance\",\n      location: \"Chennai, India\",\n      type: \"Full-time\",\n      experience: \"1-3 years\",\n      description: \"Provide on-site maintenance and troubleshooting for water treatment equipment. Ensure optimal performance of installed systems.\",\n      requirements: [\n        \"Diploma/B.Tech in Mechanical/Electrical\",\n        \"Field service experience preferred\",\n        \"Willingness to travel\",\n        \"Problem-solving skills\"\n      ]\n    }\n  ];\n\n  const benefits = [\n    \"Competitive salary packages\",\n    \"Health insurance for employee and family\",\n    \"Performance-based bonuses\",\n    \"Professional development opportunities\",\n    \"Flexible working arrangements\",\n    \"Annual company retreats\"\n  ];\n\n  const values = [\n    {\n      icon: <Users className=\"h-8 w-8 text-primary\" />,\n      title: \"Team Collaboration\",\n      description: \"Work with talented professionals in a collaborative environment\"\n    },\n    {\n      icon: <Briefcase className=\"h-8 w-8 text-primary\" />,\n      title: \"Career Growth\",\n      description: \"Opportunities for advancement and skill development\"\n    },\n    {\n      icon: <Clock className=\"h-8 w-8 text-primary\" />,\n      title: \"Work-Life Balance\",\n      description: \"Flexible schedules and remote work options\"\n    }\n  ];\n\n  return (\n    <>\n      <Helmet>\n        <title>Careers - DLS Envirotech Corporation | Join Our Environmental Technology Team</title>\n        <meta name=\"description\" content=\"Explore exciting career opportunities at DLS Envirotech Corporation. Join our team of environmental technology experts and help create sustainable water treatment solutions.\" />\n        <meta name=\"keywords\" content=\"careers, jobs, environmental technology, water treatment, DLS Envirotech, engineering careers\" />\n        <meta property=\"og:title\" content=\"Careers - DLS Envirotech Corporation\" />\n        <meta property=\"og:description\" content=\"Explore exciting career opportunities at DLS Envirotech Corporation. Join our team of environmental technology experts.\" />\n        <meta property=\"og:type\" content=\"website\" />\n      </Helmet>\n      \n      <div className=\"min-h-screen bg-white\">\n        <Header />\n        <main className=\"bg-gray-50\">\n          {/* Hero Section */}\n          <section className=\"bg-gradient-to-r from-industrial-900 to-industrial-700 text-white py-20\">\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n              <h1 className=\"text-4xl md:text-5xl font-bold mb-6\" data-testid=\"text-career-hero-title\">\n                Join Our Team\n              </h1>\n              <p className=\"text-xl text-industrial-200 max-w-3xl mx-auto\" data-testid=\"text-career-hero-description\">\n                Build your career with a leading environmental technology company. \n                Be part of our mission to create sustainable water treatment solutions.\n              </p>\n            </div>\n          </section>\n\n          {/* Why Work With Us */}\n          <section className=\"py-16\">\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n              <div className=\"text-center mb-12\">\n                <h2 className=\"text-3xl font-bold text-industrial-900 mb-4\" data-testid=\"text-why-work-title\">\n                  Why Work With Us?\n                </h2>\n                <p className=\"text-lg text-gray-600 max-w-2xl mx-auto\" data-testid=\"text-why-work-description\">\n                  Join a company that values innovation, sustainability, and professional growth\n                </p>\n              </div>\n\n              <div className=\"grid md:grid-cols-3 gap-8 mb-16\">\n                {values.map((value, index) => (\n                  <Card key={index} className=\"text-center\" data-testid={`card-value-${index}`}>\n                    <CardHeader>\n                      <div className=\"flex justify-center mb-4\">\n                        {value.icon}\n                      </div>\n                      <CardTitle>{value.title}</CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <CardDescription>{value.description}</CardDescription>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n\n              {/* Benefits */}\n              <div className=\"bg-white rounded-lg p-8 shadow-lg\">\n                <h3 className=\"text-2xl font-bold text-industrial-900 mb-6\" data-testid=\"text-benefits-title\">\n                  Employee Benefits\n                </h3>\n                <div className=\"grid md:grid-cols-2 gap-4\">\n                  {benefits.map((benefit, index) => (\n                    <div key={index} className=\"flex items-center space-x-3\" data-testid={`benefit-${index}`}>\n                      <div className=\"w-2 h-2 bg-primary rounded-full\"></div>\n                      <span className=\"text-gray-700\">{benefit}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </section>\n\n          {/* Current Openings */}\n          <section className=\"py-16 bg-white\">\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n              <div className=\"text-center mb-12\">\n                <h2 className=\"text-3xl font-bold text-industrial-900 mb-4\" data-testid=\"text-openings-title\">\n                  Current Openings\n                </h2>\n                <p className=\"text-lg text-gray-600\" data-testid=\"text-openings-description\">\n                  Explore exciting career opportunities with our growing team\n                </p>\n              </div>\n\n              <div className=\"grid gap-6\">\n                {jobOpenings.map((job) => (\n                  <Card key={job.id} className=\"hover:shadow-lg transition-shadow\" data-testid={`card-job-${job.id}`}>\n                    <CardHeader>\n                      <div className=\"flex justify-between items-start\">\n                        <div>\n                          <CardTitle className=\"text-xl mb-2\">{job.title}</CardTitle>\n                          <div className=\"flex flex-wrap gap-2 mb-3\">\n                            <Badge variant=\"secondary\">{job.department}</Badge>\n                            <Badge variant=\"outline\">{job.type}</Badge>\n                            <Badge variant=\"outline\">{job.experience}</Badge>\n                          </div>\n                          <div className=\"flex items-center text-gray-600 text-sm\">\n                            <MapPin className=\"h-4 w-4 mr-1\" />\n                            {job.location}\n                          </div>\n                        </div>\n                        <Button data-testid={`button-apply-${job.id}`}>\n                          Apply Now\n                        </Button>\n                      </div>\n                    </CardHeader>\n                    <CardContent>\n                      <CardDescription className=\"mb-4\">\n                        {job.description}\n                      </CardDescription>\n                      <div>\n                        <h4 className=\"font-semibold mb-2\">Requirements:</h4>\n                        <ul className=\"list-disc list-inside text-sm text-gray-600 space-y-1\">\n                          {job.requirements.map((req, index) => (\n                            <li key={index}>{req}</li>\n                          ))}\n                        </ul>\n                      </div>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            </div>\n          </section>\n\n          {/* Call to Action */}\n          <section className=\"py-16 bg-primary text-white\">\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n              <h2 className=\"text-3xl font-bold mb-4\" data-testid=\"text-cta-title\">\n                Don't See a Perfect Match?\n              </h2>\n              <p className=\"text-xl mb-8 text-primary-100\" data-testid=\"text-cta-description\">\n                We're always looking for talented individuals. Send us your resume and we'll keep you in mind for future opportunities.\n              </p>\n              <Button variant=\"secondary\" size=\"lg\" data-testid=\"button-send-resume\">\n                Send Your Resume\n              </Button>\n            </div>\n          </section>\n        </main>\n        <Footer />\n        <ChatbotWidget />\n      </div>\n    </>\n  );\n};\n\nexport default Career;","size_bytes":10662},"client/src/components/ui/theme-toggle.tsx":{"content":"import { Moon, Sun } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { useTheme } from \"@/contexts/theme-context\";\n\nexport function ThemeToggle() {\n  const { theme, toggleTheme } = useTheme();\n\n  return (\n    <Button\n      variant=\"ghost\"\n      size=\"icon\"\n      onClick={toggleTheme}\n      className=\"h-9 w-9\"\n      data-testid=\"button-theme-toggle\"\n    >\n      <Sun className=\"h-4 w-4 rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0\" />\n      <Moon className=\"absolute h-4 w-4 rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100\" />\n      <span className=\"sr-only\">Toggle theme</span>\n    </Button>\n  );\n}","size_bytes":661},"client/src/contexts/theme-context.tsx":{"content":"import { createContext, useContext, useEffect, useState } from \"react\";\n\ntype Theme = \"light\" | \"dark\";\n\ntype ThemeProviderProps = {\n  children: React.ReactNode;\n  defaultTheme?: Theme;\n  storageKey?: string;\n};\n\ntype ThemeProviderState = {\n  theme: Theme;\n  setTheme: (theme: Theme) => void;\n  toggleTheme: () => void;\n};\n\nconst initialState: ThemeProviderState = {\n  theme: \"light\",\n  setTheme: () => null,\n  toggleTheme: () => null,\n};\n\nconst ThemeProviderContext = createContext<ThemeProviderState>(initialState);\n\nexport function ThemeProvider({\n  children,\n  defaultTheme = \"light\",\n  storageKey = \"dls-theme\",\n  ...props\n}: ThemeProviderProps) {\n  const [theme, setTheme] = useState<Theme>(() => {\n    if (typeof window !== \"undefined\") {\n      return (localStorage.getItem(storageKey) as Theme) || defaultTheme;\n    }\n    return defaultTheme;\n  });\n\n  useEffect(() => {\n    const root = window.document.documentElement;\n    \n    root.classList.remove(\"light\", \"dark\");\n    root.classList.add(theme);\n  }, [theme]);\n\n  const value = {\n    theme,\n    setTheme: (theme: Theme) => {\n      localStorage.setItem(storageKey, theme);\n      setTheme(theme);\n    },\n    toggleTheme: () => {\n      const newTheme = theme === \"light\" ? \"dark\" : \"light\";\n      localStorage.setItem(storageKey, newTheme);\n      setTheme(newTheme);\n    },\n  };\n\n  return (\n    <ThemeProviderContext.Provider {...props} value={value}>\n      {children}\n    </ThemeProviderContext.Provider>\n  );\n}\n\nexport const useTheme = () => {\n  const context = useContext(ThemeProviderContext);\n\n  if (context === undefined)\n    throw new Error(\"useTheme must be used within a ThemeProvider\");\n\n  return context;\n};","size_bytes":1677}},"version":1}